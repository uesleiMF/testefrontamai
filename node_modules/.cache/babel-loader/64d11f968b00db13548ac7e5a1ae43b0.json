{"ast":null,"code":"var _jsxFileName = \"/home/ueslei/Documentos/GitHub/testefrontamai/src/pages/Player/LibrarySong.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst LibrarySong = ({\n  song,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  songs,\n  setSongs\n}) => {\n  // Function\n  const songSelectHandler = async () => {\n    await setCurrentSong(song);\n    const curSong = song;\n    const songList = songs;\n    const newSongs = songList.map(song => {\n      if (song.id === curSong.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs); // check if user is wanting to play a song.\n\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(LibrarySongContainer, {\n    onClick: songSelectHandler,\n    isActive: song.active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    src: song.cover,\n    alt: song.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(LibrarySongDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(H1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, song.name), /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, song.artist)));\n};\n\nconst LibrarySongContainer = styled.div`\n\tpadding: 0 2rem 0 2rem;\n\theight: 90px;\n\twidth: 190%;\n\tdisplay: flex;\n\ttransition: all 0.3s ease;\n\tbackground-color: ${p => p.isActive ? \"pink\" : \"white\"};\n\t&:hover {\n\t\tbackground-color: lightblue;\n\t\ttransition: all 0.3s ease;\n\t}\n\t&.active {\n\t\tbackground-color: pink;\n\t}\n`;\nconst LibrarySongDescription = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\nconst Img = styled.img`\n\tmargin: 8px 0;\n\theight: 60px;\n\tborder-radius: 30%;\n`;\nconst H1 = styled.h3`\n\tpadding-left: 2rem;\n\tfont-size: 0.9rem;\n`;\nconst H2 = styled.h4`\n\tpadding-left: 2rem;\n\tfont-size: 0.8rem;\n`;\nexport default LibrarySong;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/testefrontamai/src/pages/Player/LibrarySong.js"],"names":["React","styled","LibrarySong","song","setCurrentSong","audioRef","isPlaying","songs","setSongs","songSelectHandler","curSong","songList","newSongs","map","id","active","current","play","cover","name","artist","LibrarySongContainer","div","p","isActive","LibrarySongDescription","Img","img","H1","h3","H2","h4"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,SAAlC;AAA6CC,EAAAA,KAA7C;AAAoDC,EAAAA;AAApD,CAAD,KAAoE;AACvF;AACA,QAAMC,iBAAiB,GAAG,YAAY;AACrC,UAAML,cAAc,CAACD,IAAD,CAApB;AACA,UAAMO,OAAO,GAAGP,IAAhB;AACA,UAAMQ,QAAQ,GAAGJ,KAAjB;AAEA,UAAMK,QAAQ,GAAGD,QAAQ,CAACE,GAAT,CAAcV,IAAD,IAAU;AACvC,UAAIA,IAAI,CAACW,EAAL,KAAYJ,OAAO,CAACI,EAAxB,EAA4B;AAC3B,eAAO,EACN,GAAGX,IADG;AAENY,UAAAA,MAAM,EAAE;AAFF,SAAP;AAIA,OALD,MAKO;AACN,eAAO,EACN,GAAGZ,IADG;AAENY,UAAAA,MAAM,EAAE;AAFF,SAAP;AAIA;AACD,KAZgB,CAAjB;AAaAP,IAAAA,QAAQ,CAACI,QAAD,CAAR,CAlBqC,CAoBrC;;AACA,QAAIN,SAAJ,EAAe;AACdD,MAAAA,QAAQ,CAACW,OAAT,CAAiBC,IAAjB;AACA;AACD,GAxBD;;AA0BA,sBAGC,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAER,iBAA/B;AAAkD,IAAA,QAAQ,EAAEN,IAAI,CAACY,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEZ,IAAI,CAACe,KAAf;AAAsB,IAAA,GAAG,EAAEf,IAAI,CAACgB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,IAAI,CAACgB,IAAV,CADD,eAEC,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,IAAI,CAACiB,MAAV,CAFD,CAFD,CAHD;AAaA,CAzCD;;AA0CA,MAAMC,oBAAoB,GAAGpB,MAAM,CAACqB,GAAI;;;;;;qBAMlBC,CAAD,IAAQA,CAAC,CAACC,QAAF,GAAa,MAAb,GAAsB,OAAS;;;;;;;;CAN5D;AAgBA,MAAMC,sBAAsB,GAAGxB,MAAM,CAACqB,GAAI;;;;;;CAA1C;AAQA,MAAMI,GAAG,GAAGzB,MAAM,CAAC0B,GAAI;;;;CAAvB;AAMA,MAAMC,EAAE,GAAG3B,MAAM,CAAC4B,EAAG;;;CAArB;AAKA,MAAMC,EAAE,GAAG7B,MAAM,CAAC8B,EAAG;;;CAArB;AAKA,eAAe7B,WAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst LibrarySong = ({ song, setCurrentSong, audioRef, isPlaying, songs, setSongs }) => {\n\t// Function\n\tconst songSelectHandler = async () => {\n\t\tawait setCurrentSong(song);\n\t\tconst curSong = song;\n\t\tconst songList = songs;\n\n\t\tconst newSongs = songList.map((song) => {\n\t\t\tif (song.id === curSong.id) {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: false,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tsetSongs(newSongs);\n\n\t\t// check if user is wanting to play a song.\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.play();\n\t\t}\n\t};\n\n\treturn (\n\t\t\n\t\t\n\t\t<LibrarySongContainer onClick={songSelectHandler} isActive={song.active}>\n\t\t\t<Img src={song.cover} alt={song.name}></Img>\n\t\t\t<LibrarySongDescription>\n\t\t\t\t<H1>{song.name}</H1>\n\t\t\t\t<H2>{song.artist}</H2>\n\t\t\t</LibrarySongDescription>\n\t\t</LibrarySongContainer>\n\n\n\t);\n};\nconst LibrarySongContainer = styled.div`\n\tpadding: 0 2rem 0 2rem;\n\theight: 90px;\n\twidth: 190%;\n\tdisplay: flex;\n\ttransition: all 0.3s ease;\n\tbackground-color: ${(p) => (p.isActive ? \"pink\" : \"white\")};\n\t&:hover {\n\t\tbackground-color: lightblue;\n\t\ttransition: all 0.3s ease;\n\t}\n\t&.active {\n\t\tbackground-color: pink;\n\t}\n`;\n\nconst LibrarySongDescription = styled.div`\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n`;\n\nconst Img = styled.img`\n\tmargin: 8px 0;\n\theight: 60px;\n\tborder-radius: 30%;\n`;\n\nconst H1 = styled.h3`\n\tpadding-left: 2rem;\n\tfont-size: 0.9rem;\n`;\n\nconst H2 = styled.h4`\n\tpadding-left: 2rem;\n\tfont-size: 0.8rem;\n`;\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}