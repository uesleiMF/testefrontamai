{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport ToggleButton from './ToggleButton';\nimport CloseButton from '../CloseButton';\nimport { useClassNames, KEY_VALUES, mergeRefs } from '../utils';\nimport Plaintext from '../Plaintext';\nimport useToggleCaret from '../utils/useToggleCaret';\nimport TextMask from '../MaskedInput/TextMask';\nimport deprecatePropType from '../utils/deprecatePropType';\nvar defaultInputMask = [];\nvar PickerToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var activeProp = props.active,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? ToggleButton : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker-toggle' : _props$classPrefix,\n      children = props.children,\n      _props$caret = props.caret,\n      caret = _props$caret === void 0 ? true : _props$caret,\n      className = props.className,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      plaintext = props.plaintext,\n      hasValue = props.hasValue,\n      editable = props.editable,\n      cleanableProp = props.cleanable,\n      _props$tabIndex = props.tabIndex,\n      tabIndexProp = _props$tabIndex === void 0 ? editable ? -1 : 0 : _props$tabIndex,\n      id = props.id,\n      value = props.value,\n      inputPlaceholder = props.inputPlaceholder,\n      inputValueProp = props.inputValue,\n      _props$inputMask = props.inputMask,\n      inputMask = _props$inputMask === void 0 ? defaultInputMask : _props$inputMask,\n      onInputChange = props.onInputChange,\n      onInputPressEnter = props.onInputPressEnter,\n      onInputBlur = props.onInputBlur,\n      onInputFocus = props.onInputFocus,\n      onClean = props.onClean,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      caretComponent = props.caretComponent,\n      _props$caretAs = props.caretAs,\n      caretAs = _props$caretAs === void 0 ? caretComponent : _props$caretAs,\n      label = props.label,\n      rest = _objectWithoutPropertiesLoose(props, [\"active\", \"as\", \"classPrefix\", \"children\", \"caret\", \"className\", \"disabled\", \"readOnly\", \"plaintext\", \"hasValue\", \"editable\", \"cleanable\", \"tabIndex\", \"id\", \"value\", \"inputPlaceholder\", \"inputValue\", \"inputMask\", \"onInputChange\", \"onInputPressEnter\", \"onInputBlur\", \"onInputFocus\", \"onClean\", \"onFocus\", \"onBlur\", \"placement\", \"caretComponent\", \"caretAs\", \"label\"]);\n\n  var inputRef = useRef(null);\n  var comboboxRef = useRef(null);\n\n  var _useState = useState(false),\n      activeState = _useState[0],\n      setActive = _useState[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var getInputValue = useCallback(function () {\n    return typeof inputValueProp === 'undefined' ? Array.isArray(value) ? value.join(',') : value : inputValueProp;\n  }, [inputValueProp, value]);\n\n  var _useState2 = useState(getInputValue),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  useEffect(function () {\n    if (comboboxRef.current) {\n      var _value = getInputValue();\n\n      setInputValue(_value);\n    }\n  }, [getInputValue]);\n  var classes = merge(className, withClassPrefix({\n    active: activeProp || activeState\n  }));\n  var handleFocus = useCallback(function (event) {\n    setActive(true);\n\n    if (editable) {\n      // Avoid firing the onFocus event twice when DatePicker and DateRangePicker allow keyboard input.\n      if (event.target === inputRef.current) {\n        onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n      } // Force the input to be focused and editable.\n\n\n      if (document.activeElement === comboboxRef.current) {\n        var _inputRef$current;\n\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }\n    } else {\n      onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n    }\n  }, [editable, onFocus]);\n  var handleBlur = useCallback(function (event) {\n    if (inputRef.current && !editable) {\n      setActive(false);\n    } // When activeElement is an input, it remains active.\n\n\n    if (editable && inputRef.current && document.activeElement !== inputRef.current) {\n      setActive(false);\n    }\n\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n  }, [editable, onBlur]);\n\n  var handleInputBlur = function handleInputBlur(event) {\n    setInputValue(getInputValue());\n    onInputBlur === null || onInputBlur === void 0 ? void 0 : onInputBlur(event);\n  };\n\n  var handleClean = useCallback(function (event) {\n    var _inputRef$current2, _comboboxRef$current;\n\n    event.stopPropagation();\n    onClean === null || onClean === void 0 ? void 0 : onClean(event); // When the value is cleared, the current component is still in focus.\n\n    editable ? (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus() : (_comboboxRef$current = comboboxRef.current) === null || _comboboxRef$current === void 0 ? void 0 : _comboboxRef$current.focus();\n  }, [editable, onClean]);\n  var handleInputChange = useCallback(function (event) {\n    var _event$target;\n\n    var value = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n    setInputValue(value);\n    onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(value, event);\n  }, [onInputChange]);\n  var handleInputKeyDown = useCallback(function (event) {\n    if (editable && event.key === KEY_VALUES.ENTER) {\n      onInputPressEnter === null || onInputPressEnter === void 0 ? void 0 : onInputPressEnter(event);\n    }\n  }, [onInputPressEnter, editable]);\n  var renderInput = useCallback(function (ref, props) {\n    return /*#__PURE__*/React.createElement(\"input\", _extends({\n      ref: mergeRefs(inputRef, ref),\n      style: {\n        pointerEvents: editable ? undefined : 'none'\n      }\n    }, props));\n  }, [editable]);\n  var ToggleCaret = useToggleCaret(placement);\n  var Caret = caretAs !== null && caretAs !== void 0 ? caretAs : ToggleCaret;\n\n  if (plaintext) {\n    return /*#__PURE__*/React.createElement(Plaintext, {\n      ref: ref,\n      localeKey: \"notSelected\"\n    }, hasValue ? children : null);\n  }\n\n  var showCleanButton = cleanableProp && hasValue && !readOnly; // When the component is read-only or disabled, the input is not interactive.\n\n  var inputFocused = readOnly || disabled ? false : editable && activeState;\n  var tabIndex = disabled ? undefined : tabIndexProp;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": activeProp,\n    \"aria-disabled\": disabled,\n    \"aria-owns\": id ? id + \"-listbox\" : undefined\n  }, rest, {\n    ref: mergeRefs(comboboxRef, ref),\n    disabled: disabled,\n    tabIndex: tabIndex,\n    className: classes,\n    onFocus: !disabled ? handleFocus : null // The debounce is set to 200 to solve the flicker caused by the switch between input and div.\n    ,\n    onBlur: !disabled ? debounce(handleBlur, 200) : null\n  }), /*#__PURE__*/React.createElement(TextMask, {\n    mask: inputMask,\n    value: Array.isArray(inputValue) ? inputValue.toString() : inputValue,\n    onBlur: handleInputBlur,\n    onFocus: onInputFocus,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    id: id,\n    \"aria-hidden\": !inputFocused,\n    readOnly: !inputFocused,\n    disabled: disabled,\n    \"aria-controls\": id ? id + \"-listbox\" : undefined,\n    tabIndex: editable ? 0 : -1,\n    className: prefix('textbox', {\n      'read-only': !inputFocused\n    }),\n    placeholder: inputPlaceholder,\n    render: renderInput\n  }), children ? /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(hasValue ? 'value' : 'placeholder'),\n    \"aria-placeholder\": typeof children === 'string' ? children : undefined\n  }, label && /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('label')\n  }, label, \": \"), children) : null, showCleanButton && /*#__PURE__*/React.createElement(CloseButton, {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"clean\"]))),\n    tabIndex: -1,\n    locale: {\n      closeLabel: 'Clear'\n    },\n    onClick: handleClean\n  }), caret && /*#__PURE__*/React.createElement(Caret, {\n    className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"caret\"])))\n  }));\n});\nPickerToggle.displayName = 'PickerToggle';\nPickerToggle.propTypes = {\n  classPrefix: PropTypes.string,\n  hasValue: PropTypes.bool,\n  cleanable: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  caret: PropTypes.bool,\n  as: PropTypes.elementType,\n  onClean: PropTypes.func,\n  active: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  plaintext: PropTypes.bool,\n  caretComponent: deprecatePropType(PropTypes.elementType, 'Use `caretAs` instead.'),\n  caretAs: PropTypes.elementType\n};\nexport default PickerToggle;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/testefrontamai/node_modules/rsuite/esm/Picker/PickerToggle.js"],"names":["_taggedTemplateLiteralLoose","_extends","_objectWithoutPropertiesLoose","_templateObject","_templateObject2","React","useState","useCallback","useEffect","useRef","PropTypes","debounce","ToggleButton","CloseButton","useClassNames","KEY_VALUES","mergeRefs","Plaintext","useToggleCaret","TextMask","deprecatePropType","defaultInputMask","PickerToggle","forwardRef","props","ref","activeProp","active","_props$as","as","Component","_props$classPrefix","classPrefix","children","_props$caret","caret","className","disabled","readOnly","plaintext","hasValue","editable","cleanableProp","cleanable","_props$tabIndex","tabIndex","tabIndexProp","id","value","inputPlaceholder","inputValueProp","inputValue","_props$inputMask","inputMask","onInputChange","onInputPressEnter","onInputBlur","onInputFocus","onClean","onFocus","onBlur","_props$placement","placement","caretComponent","_props$caretAs","caretAs","label","rest","inputRef","comboboxRef","_useState","activeState","setActive","_useClassNames","withClassPrefix","merge","prefix","getInputValue","Array","isArray","join","_useState2","setInputValue","current","_value","classes","handleFocus","event","target","document","activeElement","_inputRef$current","focus","handleBlur","handleInputBlur","handleClean","_inputRef$current2","_comboboxRef$current","stopPropagation","handleInputChange","_event$target","handleInputKeyDown","key","ENTER","renderInput","createElement","style","pointerEvents","undefined","ToggleCaret","Caret","localeKey","showCleanButton","inputFocused","role","mask","toString","onChange","onKeyDown","placeholder","render","locale","closeLabel","onClick","displayName","propTypes","string","bool","node","elementType","func"],"mappings":"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","sourcesContent":["import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport ToggleButton from './ToggleButton';\nimport CloseButton from '../CloseButton';\nimport { useClassNames, KEY_VALUES, mergeRefs } from '../utils';\nimport Plaintext from '../Plaintext';\nimport useToggleCaret from '../utils/useToggleCaret';\nimport TextMask from '../MaskedInput/TextMask';\nimport deprecatePropType from '../utils/deprecatePropType';\nvar defaultInputMask = [];\nvar PickerToggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var activeProp = props.active,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? ToggleButton : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker-toggle' : _props$classPrefix,\n      children = props.children,\n      _props$caret = props.caret,\n      caret = _props$caret === void 0 ? true : _props$caret,\n      className = props.className,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      plaintext = props.plaintext,\n      hasValue = props.hasValue,\n      editable = props.editable,\n      cleanableProp = props.cleanable,\n      _props$tabIndex = props.tabIndex,\n      tabIndexProp = _props$tabIndex === void 0 ? editable ? -1 : 0 : _props$tabIndex,\n      id = props.id,\n      value = props.value,\n      inputPlaceholder = props.inputPlaceholder,\n      inputValueProp = props.inputValue,\n      _props$inputMask = props.inputMask,\n      inputMask = _props$inputMask === void 0 ? defaultInputMask : _props$inputMask,\n      onInputChange = props.onInputChange,\n      onInputPressEnter = props.onInputPressEnter,\n      onInputBlur = props.onInputBlur,\n      onInputFocus = props.onInputFocus,\n      onClean = props.onClean,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      caretComponent = props.caretComponent,\n      _props$caretAs = props.caretAs,\n      caretAs = _props$caretAs === void 0 ? caretComponent : _props$caretAs,\n      label = props.label,\n      rest = _objectWithoutPropertiesLoose(props, [\"active\", \"as\", \"classPrefix\", \"children\", \"caret\", \"className\", \"disabled\", \"readOnly\", \"plaintext\", \"hasValue\", \"editable\", \"cleanable\", \"tabIndex\", \"id\", \"value\", \"inputPlaceholder\", \"inputValue\", \"inputMask\", \"onInputChange\", \"onInputPressEnter\", \"onInputBlur\", \"onInputFocus\", \"onClean\", \"onFocus\", \"onBlur\", \"placement\", \"caretComponent\", \"caretAs\", \"label\"]);\n\n  var inputRef = useRef(null);\n  var comboboxRef = useRef(null);\n\n  var _useState = useState(false),\n      activeState = _useState[0],\n      setActive = _useState[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge,\n      prefix = _useClassNames.prefix;\n\n  var getInputValue = useCallback(function () {\n    return typeof inputValueProp === 'undefined' ? Array.isArray(value) ? value.join(',') : value : inputValueProp;\n  }, [inputValueProp, value]);\n\n  var _useState2 = useState(getInputValue),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  useEffect(function () {\n    if (comboboxRef.current) {\n      var _value = getInputValue();\n\n      setInputValue(_value);\n    }\n  }, [getInputValue]);\n  var classes = merge(className, withClassPrefix({\n    active: activeProp || activeState\n  }));\n  var handleFocus = useCallback(function (event) {\n    setActive(true);\n\n    if (editable) {\n      // Avoid firing the onFocus event twice when DatePicker and DateRangePicker allow keyboard input.\n      if (event.target === inputRef.current) {\n        onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n      } // Force the input to be focused and editable.\n\n\n      if (document.activeElement === comboboxRef.current) {\n        var _inputRef$current;\n\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      }\n    } else {\n      onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n    }\n  }, [editable, onFocus]);\n  var handleBlur = useCallback(function (event) {\n    if (inputRef.current && !editable) {\n      setActive(false);\n    } // When activeElement is an input, it remains active.\n\n\n    if (editable && inputRef.current && document.activeElement !== inputRef.current) {\n      setActive(false);\n    }\n\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n  }, [editable, onBlur]);\n\n  var handleInputBlur = function handleInputBlur(event) {\n    setInputValue(getInputValue());\n    onInputBlur === null || onInputBlur === void 0 ? void 0 : onInputBlur(event);\n  };\n\n  var handleClean = useCallback(function (event) {\n    var _inputRef$current2, _comboboxRef$current;\n\n    event.stopPropagation();\n    onClean === null || onClean === void 0 ? void 0 : onClean(event); // When the value is cleared, the current component is still in focus.\n\n    editable ? (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus() : (_comboboxRef$current = comboboxRef.current) === null || _comboboxRef$current === void 0 ? void 0 : _comboboxRef$current.focus();\n  }, [editable, onClean]);\n  var handleInputChange = useCallback(function (event) {\n    var _event$target;\n\n    var value = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value;\n    setInputValue(value);\n    onInputChange === null || onInputChange === void 0 ? void 0 : onInputChange(value, event);\n  }, [onInputChange]);\n  var handleInputKeyDown = useCallback(function (event) {\n    if (editable && event.key === KEY_VALUES.ENTER) {\n      onInputPressEnter === null || onInputPressEnter === void 0 ? void 0 : onInputPressEnter(event);\n    }\n  }, [onInputPressEnter, editable]);\n  var renderInput = useCallback(function (ref, props) {\n    return /*#__PURE__*/React.createElement(\"input\", _extends({\n      ref: mergeRefs(inputRef, ref),\n      style: {\n        pointerEvents: editable ? undefined : 'none'\n      }\n    }, props));\n  }, [editable]);\n  var ToggleCaret = useToggleCaret(placement);\n  var Caret = caretAs !== null && caretAs !== void 0 ? caretAs : ToggleCaret;\n\n  if (plaintext) {\n    return /*#__PURE__*/React.createElement(Plaintext, {\n      ref: ref,\n      localeKey: \"notSelected\"\n    }, hasValue ? children : null);\n  }\n\n  var showCleanButton = cleanableProp && hasValue && !readOnly; // When the component is read-only or disabled, the input is not interactive.\n\n  var inputFocused = readOnly || disabled ? false : editable && activeState;\n  var tabIndex = disabled ? undefined : tabIndexProp;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": activeProp,\n    \"aria-disabled\": disabled,\n    \"aria-owns\": id ? id + \"-listbox\" : undefined\n  }, rest, {\n    ref: mergeRefs(comboboxRef, ref),\n    disabled: disabled,\n    tabIndex: tabIndex,\n    className: classes,\n    onFocus: !disabled ? handleFocus : null // The debounce is set to 200 to solve the flicker caused by the switch between input and div.\n    ,\n    onBlur: !disabled ? debounce(handleBlur, 200) : null\n  }), /*#__PURE__*/React.createElement(TextMask, {\n    mask: inputMask,\n    value: Array.isArray(inputValue) ? inputValue.toString() : inputValue,\n    onBlur: handleInputBlur,\n    onFocus: onInputFocus,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    id: id,\n    \"aria-hidden\": !inputFocused,\n    readOnly: !inputFocused,\n    disabled: disabled,\n    \"aria-controls\": id ? id + \"-listbox\" : undefined,\n    tabIndex: editable ? 0 : -1,\n    className: prefix('textbox', {\n      'read-only': !inputFocused\n    }),\n    placeholder: inputPlaceholder,\n    render: renderInput\n  }), children ? /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(hasValue ? 'value' : 'placeholder'),\n    \"aria-placeholder\": typeof children === 'string' ? children : undefined\n  }, label && /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('label')\n  }, label, \": \"), children) : null, showCleanButton && /*#__PURE__*/React.createElement(CloseButton, {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"clean\"]))),\n    tabIndex: -1,\n    locale: {\n      closeLabel: 'Clear'\n    },\n    onClick: handleClean\n  }), caret && /*#__PURE__*/React.createElement(Caret, {\n    className: prefix(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"caret\"])))\n  }));\n});\nPickerToggle.displayName = 'PickerToggle';\nPickerToggle.propTypes = {\n  classPrefix: PropTypes.string,\n  hasValue: PropTypes.bool,\n  cleanable: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  caret: PropTypes.bool,\n  as: PropTypes.elementType,\n  onClean: PropTypes.func,\n  active: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  plaintext: PropTypes.bool,\n  caretComponent: deprecatePropType(PropTypes.elementType, 'Use `caretAs` instead.'),\n  caretAs: PropTypes.elementType\n};\nexport default PickerToggle;"]},"metadata":{},"sourceType":"module"}