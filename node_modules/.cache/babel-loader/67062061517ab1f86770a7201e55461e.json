{"ast":null,"code":"import { mapAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n  var getComponent = route.getComponent || route.getComponents;\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if (isPromise(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\nfunction getComponents(nextState, callback) {\n  mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\nexport default getComponents;","map":{"version":3,"names":["mapAsync","isPromise","getComponentsForRoute","nextState","route","callback","component","components","getComponent","getComponents","componentReturn","call","then","routes","index"],"sources":["/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/testefrontamai/node_modules/react-router/es/getComponents.js"],"sourcesContent":["import { mapAsync } from './AsyncUtils';\nimport { isPromise } from './PromiseUtils';\n\nfunction getComponentsForRoute(nextState, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n    return;\n  }\n\n  var getComponent = route.getComponent || route.getComponents;\n  if (getComponent) {\n    var componentReturn = getComponent.call(route, nextState, callback);\n    if (isPromise(componentReturn)) componentReturn.then(function (component) {\n      return callback(null, component);\n    }, callback);\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\nfunction getComponents(nextState, callback) {\n  mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState, route, callback);\n  }, callback);\n}\n\nexport default getComponents;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,cAAc;AACvC,SAASC,SAAS,QAAQ,gBAAgB;AAE1C,SAASC,qBAAqB,CAACC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EACzD,IAAID,KAAK,CAACE,SAAS,IAAIF,KAAK,CAACG,UAAU,EAAE;IACvCF,QAAQ,CAAC,IAAI,EAAED,KAAK,CAACE,SAAS,IAAIF,KAAK,CAACG,UAAU,CAAC;IACnD;EACF;EAEA,IAAIC,YAAY,GAAGJ,KAAK,CAACI,YAAY,IAAIJ,KAAK,CAACK,aAAa;EAC5D,IAAID,YAAY,EAAE;IAChB,IAAIE,eAAe,GAAGF,YAAY,CAACG,IAAI,CAACP,KAAK,EAAED,SAAS,EAAEE,QAAQ,CAAC;IACnE,IAAIJ,SAAS,CAACS,eAAe,CAAC,EAAEA,eAAe,CAACE,IAAI,CAAC,UAAUN,SAAS,EAAE;MACxE,OAAOD,QAAQ,CAAC,IAAI,EAAEC,SAAS,CAAC;IAClC,CAAC,EAAED,QAAQ,CAAC;EACd,CAAC,MAAM;IACLA,QAAQ,EAAE;EACZ;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,aAAa,CAACN,SAAS,EAAEE,QAAQ,EAAE;EAC1CL,QAAQ,CAACG,SAAS,CAACU,MAAM,EAAE,UAAUT,KAAK,EAAEU,KAAK,EAAET,QAAQ,EAAE;IAC3DH,qBAAqB,CAACC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,CAAC;EACnD,CAAC,EAAEA,QAAQ,CAAC;AACd;AAEA,eAAeI,aAAa"},"metadata":{},"sourceType":"module"}