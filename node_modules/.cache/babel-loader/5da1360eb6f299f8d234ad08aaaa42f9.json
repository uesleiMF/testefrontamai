{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from './AutoScroller';\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from './utils';\nimport { useIsMounted } from '../../utils';\nimport useManager from './useManager';\nvar helperElementClass = 'rs-list-item-helper';\nvar holderElementClass = 'rs-list-item-holder';\n\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n      pressDelay = config.pressDelay,\n      transitionDuration = config.transitionDuration,\n      onSort = config.onSort,\n      onSortEnd = config.onSortEnd,\n      onSortMove = config.onSortMove,\n      onSortStart = config.onSortStart;\n\n  var _useState = useState(false),\n      sorting = _useState[0],\n      setSorting = _useState[1];\n\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n\n  var _useManager = useManager(),\n      listItemRegister = _useManager.listItemRegister,\n      getManagedItem = _useManager.getManagedItem,\n      getOrderedItems = _useManager.getOrderedItems;\n\n  var isMounted = useIsMounted();\n  /**\n   * start dragging\n   * */\n\n  var handlePress = useCallback(function (mouseDownEvent, _targetNode, curManagedItem) {\n    var _curManagedItem$info$, _curManagedItem$info$2, _activeNodeHelper;\n\n    if (!isMounted()) return; // data\n\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = (_curManagedItem$info$ = curManagedItem.info.index) !== null && _curManagedItem$info$ !== void 0 ? _curManagedItem$info$ : 0;\n    var activeNodeNextIndex = (_curManagedItem$info$2 = curManagedItem.info.index) !== null && _curManagedItem$info$2 !== void 0 ? _curManagedItem$info$2 : 0;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n    // init scroller\n\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 ? void 0 : _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n\n    var sortMouseMoveListener = on(window, 'mousemove', function (mouseOverEvent) {\n      // Update helper position\n      var offset = {\n        x: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageX) || 0,\n        y: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageY) || 0\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - mouseDownEvent.pageX,\n        y: offset.y - mouseDownEvent.pageY\n      };\n\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, activeNodeHolderTranslate);\n      } // animate\n\n\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var aTop = activeNodeOffsetEdge.top || 0;\n      var cTop = containerScrollDelta.top || 0;\n      var sortingOffsetY = aTop + activeNodeHolderTranslate.y + cTop;\n\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var _listItemManagerRefs$;\n\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = (_listItemManagerRefs$ = listItemManagerRefs[i].info.index) !== null && _listItemManagerRefs$ !== void 0 ? _listItemManagerRefs$ : 0;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        }; // If we haven't cached the node's offsetTop / offsetLeft value\n\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset; // Get a reference to the next node\n\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1]; // Also cache the node's edge offset if needed.\n\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        } // If the node is the one we're currently animating, skip it\n\n\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n\n        var curEdgeOffsetTop = curEdgeOffset.top || 0;\n\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffsetTop) {\n          var _prvNode$edgeOffset;\n\n          var yOffset = (((_prvNode$edgeOffset = prvNode.edgeOffset) === null || _prvNode$edgeOffset === void 0 ? void 0 : _prvNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n          translate.y = yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -yOffset\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffsetTop + offsetY) {\n          var _nextNode$edgeOffset;\n\n          var _yOffset = (((_nextNode$edgeOffset = nextNode.edgeOffset) === null || _nextNode$edgeOffset === void 0 ? void 0 : _nextNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n\n          translate.y = _yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -_yOffset\n          };\n\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate); // translate holder\n\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      } // auto scroll\n\n\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            x: 0,\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            x: 0,\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n\n      onSortMove === null || onSortMove === void 0 ? void 0 : onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, mouseOverEvent);\n    }, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', function (event) {\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, {\n          x: holderTranslate.x - (containerScrollDelta.left || 0),\n          y: holderTranslate.y - (containerScrollDelta.top || 0)\n        });\n        setTransitionDuration(activeNodeHelper, transitionDuration);\n      } // wait for animation\n\n\n      setTimeout(function () {\n        var _activeNodeHelper2, _activeNodeHelper2$pa;\n\n        if (!isMounted()) return; // Remove the helper from the DOM\n\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 ? void 0 : (_activeNodeHelper2$pa = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2$pa === void 0 ? void 0 : _activeNodeHelper2$pa.removeChild(activeNodeHelper);\n        activeNodeHelper = null; // Remove redundant styles\n\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value; // Clear the cached offsetTop / offsetLeft value\n\n          item.edgeOffset = null; // Remove the transforms / transitions\n\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        } // Stop autoScroll\n\n\n        autoScroller.clear(); // Update manager state\n\n        setSorting(false); // callbacks\n\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 ? void 0 : onSortEnd(callbackPayload, event);\n        onSort === null || onSort === void 0 ? void 0 : onSort(callbackPayload, event);\n      }, transitionDuration);\n    }, {\n      passive: false\n    });\n    setSorting(true); // start callback\n\n    onSortStart === null || onSortStart === void 0 ? void 0 : onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, mouseDownEvent.nativeEvent);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n  /**\n   * Determine whether to start dragging\n   * */\n\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n\n    if ( // is not secondary button pressed\n    mouseDownEvent.button !== 2 && // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled && // is not sorting\n    !sorting && // is valid node\n    targetNode instanceof HTMLElement && // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n  /**\n   * Clear timer after drag\n   * */\n\n  var handleEnd = useCallback(function () {\n    return clearTimeout(pressTimer.current);\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\n\nexport default useSortHelper;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/testefrontamai/node_modules/rsuite/esm/List/helper/useSortHelper.js"],"names":["_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","on","useCallback","useRef","useState","AutoScroller","closestNode","getEdgeOffset","getScrollingParent","isContainInteractiveElement","setInlineStyles","setTransitionDuration","setTranslate3d","useIsMounted","useManager","helperElementClass","holderElementClass","useSortHelper","config","autoScroll","pressDelay","transitionDuration","onSort","onSortEnd","onSortMove","onSortStart","_useState","sorting","setSorting","containerRef","pressTimer","_useManager","listItemRegister","getManagedItem","getOrderedItems","isMounted","handlePress","mouseDownEvent","_targetNode","curManagedItem","_curManagedItem$info$","_curManagedItem$info$2","_activeNodeHelper","containerElement","current","activeNode","node","activeNodeOldIndex","info","index","activeNodeNextIndex","activeNodeHolderTranslate","x","y","animatedNodesOffset","scrollContainer","initScroll","scrollLeft","scrollTop","autoScroller","offset","left","top","activeNodeBoundingClientRect","getBoundingClientRect","activeNodeOffsetEdge","activeNodeStyle","getComputedStyle","activeNodeHelper","cloneNode","classList","add","position","width","height","parseFloat","marginLeft","marginTop","document","body","appendChild","getContainerScrollDelta","getHolderTranslate","reduce","acc","item","sortMouseMoveListener","window","mouseOverEvent","pageX","pageY","containerScrollDelta","containerBoundingRect","listItemManagerRefs","collection","aTop","cTop","sortingOffsetY","_listItemManagerRefs$","currentNode","currentNodeIndex","offsetY","offsetHeight","translate","curEdgeOffset","edgeOffset","prvNode","nextNode","curEdgeOffsetTop","_prvNode$edgeOffset","yOffset","_nextNode$edgeOffset","_yOffset","update","maxTranslate","minTranslate","oldIndex","newIndex","passive","sortMouseEndListener","event","off","holderTranslate","setTimeout","_activeNodeHelper2","_activeNodeHelper2$pa","parentNode","removeChild","remove","_iterator","_step","el","clear","callbackPayload","nativeEvent","handleStart","triggeredNode","target","targetNode","Boolean","button","disabled","HTMLElement","contains","preventDefault","handleEnd","clearTimeout","register"],"mappings":"AAAA,SAASA,+BAAT,CAAyCC,CAAzC,EAA4CC,cAA5C,EAA4D;AAAE,MAAIC,EAAE,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAlC,IAAuDJ,CAAC,CAAC,YAAD,CAAjE;AAAiF,MAAIE,EAAJ,EAAQ,OAAO,CAACA,EAAE,GAAGA,EAAE,CAACG,IAAH,CAAQL,CAAR,CAAN,EAAkBM,IAAlB,CAAuBC,IAAvB,CAA4BL,EAA5B,CAAP;;AAAwC,MAAIM,KAAK,CAACC,OAAN,CAAcT,CAAd,MAAqBE,EAAE,GAAGQ,2BAA2B,CAACV,CAAD,CAArD,KAA6DC,cAAc,IAAID,CAAlB,IAAuB,OAAOA,CAAC,CAACW,MAAT,KAAoB,QAA5G,EAAsH;AAAE,QAAIT,EAAJ,EAAQF,CAAC,GAAGE,EAAJ;AAAQ,QAAIU,CAAC,GAAG,CAAR;AAAW,WAAO,YAAY;AAAE,UAAIA,CAAC,IAAIZ,CAAC,CAACW,MAAX,EAAmB,OAAO;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAP;AAAuB,aAAO;AAAEA,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAEd,CAAC,CAACY,CAAC,EAAF;AAAvB,OAAP;AAAwC,KAAvG;AAA0G;;AAAC,QAAM,IAAIG,SAAJ,CAAc,uIAAd,CAAN;AAA+J;;AAE5lB,SAASL,2BAAT,CAAqCV,CAArC,EAAwCgB,MAAxC,EAAgD;AAAE,MAAI,CAAChB,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOiB,iBAAiB,CAACjB,CAAD,EAAIgB,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BhB,IAA1B,CAA+BL,CAA/B,EAAkCsB,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIJ,CAAC,KAAK,QAAN,IAAkBlB,CAAC,CAACuB,WAAxB,EAAqCL,CAAC,GAAGlB,CAAC,CAACuB,WAAF,CAAcC,IAAlB;AAAwB,MAAIN,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOV,KAAK,CAACiB,IAAN,CAAWzB,CAAX,CAAP;AAAsB,MAAIkB,CAAC,KAAK,WAAN,IAAqB,2CAA2CQ,IAA3C,CAAgDR,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACjB,CAAD,EAAIgB,MAAJ,CAAxB;AAAsC;;AAEha,SAASC,iBAAT,CAA2BU,GAA3B,EAAgCC,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGD,GAAG,CAAChB,MAA7B,EAAqCiB,GAAG,GAAGD,GAAG,CAAChB,MAAV;;AAAkB,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWiB,IAAI,GAAG,IAAIrB,KAAJ,CAAUoB,GAAV,CAAvB,EAAuChB,CAAC,GAAGgB,GAA3C,EAAgDhB,CAAC,EAAjD,EAAqD;AAAEiB,IAAAA,IAAI,CAACjB,CAAD,CAAJ,GAAUe,GAAG,CAACf,CAAD,CAAb;AAAmB;;AAAC,SAAOiB,IAAP;AAAc;;AAEvL,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,kBAArC,EAAyDC,2BAAzD,EAAsFC,eAAtF,EAAuGC,qBAAvG,EAA8HC,cAA9H,QAAoJ,SAApJ;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,IAAIC,kBAAkB,GAAG,qBAAzB;AACA,IAAIC,kBAAkB,GAAG,qBAAzB;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACjD,MAAIC,UAAU,GAAGD,MAAM,CAACC,UAAxB;AAAA,MACIC,UAAU,GAAGF,MAAM,CAACE,UADxB;AAAA,MAEIC,kBAAkB,GAAGH,MAAM,CAACG,kBAFhC;AAAA,MAGIC,MAAM,GAAGJ,MAAM,CAACI,MAHpB;AAAA,MAIIC,SAAS,GAAGL,MAAM,CAACK,SAJvB;AAAA,MAKIC,UAAU,GAAGN,MAAM,CAACM,UALxB;AAAA,MAMIC,WAAW,GAAGP,MAAM,CAACO,WANzB;;AAQA,MAAIC,SAAS,GAAGtB,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACIuB,OAAO,GAAGD,SAAS,CAAC,CAAD,CADvB;AAAA,MAEIE,UAAU,GAAGF,SAAS,CAAC,CAAD,CAF1B;;AAIA,MAAIG,YAAY,GAAG1B,MAAM,CAAC,IAAD,CAAzB;AACA,MAAI2B,UAAU,GAAG3B,MAAM,EAAvB;;AAEA,MAAI4B,WAAW,GAAGjB,UAAU,EAA5B;AAAA,MACIkB,gBAAgB,GAAGD,WAAW,CAACC,gBADnC;AAAA,MAEIC,cAAc,GAAGF,WAAW,CAACE,cAFjC;AAAA,MAGIC,eAAe,GAAGH,WAAW,CAACG,eAHlC;;AAKA,MAAIC,SAAS,GAAGtB,YAAY,EAA5B;AACA;;;;AAIA,MAAIuB,WAAW,GAAGlC,WAAW,CAAC,UAAUmC,cAAV,EAA0BC,WAA1B,EAAuCC,cAAvC,EAAuD;AACnF,QAAIC,qBAAJ,EAA2BC,sBAA3B,EAAmDC,iBAAnD;;AAEA,QAAI,CAACP,SAAS,EAAd,EAAkB,OAHiE,CAGzD;;AAE1B,QAAIQ,gBAAgB,GAAGd,YAAY,CAACe,OAApC;AACA,QAAIC,UAAU,GAAGN,cAAc,CAACO,IAAhC;AACA,QAAIC,kBAAkB,GAAG,CAACP,qBAAqB,GAAGD,cAAc,CAACS,IAAf,CAAoBC,KAA7C,MAAwD,IAAxD,IAAgET,qBAAqB,KAAK,KAAK,CAA/F,GAAmGA,qBAAnG,GAA2H,CAApJ;AACA,QAAIU,mBAAmB,GAAG,CAACT,sBAAsB,GAAGF,cAAc,CAACS,IAAf,CAAoBC,KAA9C,MAAyD,IAAzD,IAAiER,sBAAsB,KAAK,KAAK,CAAjG,GAAqGA,sBAArG,GAA8H,CAAxJ;AACA,QAAIU,yBAAyB,GAAG;AAC9BC,MAAAA,CAAC,EAAE,CAD2B;AAE9BC,MAAAA,CAAC,EAAE;AAF2B,KAAhC;AAIA,QAAIC,mBAAmB,GAAG,EAA1B,CAbmF,CAarD;AAC9B;;AAEA,QAAIC,eAAe,GAAG/C,kBAAkB,CAACmC,gBAAD,CAAlB,IAAwCA,gBAA9D;AACA,QAAIa,UAAU,GAAG;AACfJ,MAAAA,CAAC,EAAEG,eAAe,CAACE,UADJ;AAEfJ,MAAAA,CAAC,EAAEE,eAAe,CAACG;AAFJ,KAAjB;AAIA,QAAIC,YAAY,GAAG,IAAItD,YAAJ,CAAiBkD,eAAjB,EAAkC,UAAUK,MAAV,EAAkB;AACrET,MAAAA,yBAAyB,CAACC,CAA1B,IAA+BQ,MAAM,CAACC,IAAtC;AACAV,MAAAA,yBAAyB,CAACE,CAA1B,IAA+BO,MAAM,CAACE,GAAtC;AACD,KAHkB,CAAnB;AAIA,QAAIC,4BAA4B,GAAGlB,UAAU,CAACmB,qBAAX,EAAnC;AACA,QAAIC,oBAAoB,GAAG1D,aAAa,CAACsC,UAAD,EAAaF,gBAAb,CAAxC;AACA,QAAIuB,eAAe,GAAGC,gBAAgB,CAACtB,UAAD,CAAtC;AACA,QAAIuB,gBAAgB,GAAGvB,UAAU,CAACwB,SAAX,CAAqB,IAArB,CAAvB;AACA,KAAC3B,iBAAiB,GAAG0B,gBAArB,MAA2C,IAA3C,IAAmD1B,iBAAiB,KAAK,KAAK,CAA9E,GAAkF,KAAK,CAAvF,GAA2FA,iBAAiB,CAAC4B,SAAlB,CAA4BC,GAA5B,CAAgCxD,kBAAhC,CAA3F;AACAL,IAAAA,eAAe,CAAC0D,gBAAD,EAAmB;AAChCI,MAAAA,QAAQ,EAAE,OADsB;AAEhCC,MAAAA,KAAK,EAAEV,4BAA4B,CAACU,KAA7B,GAAqC,IAFZ;AAGhCC,MAAAA,MAAM,EAAEX,4BAA4B,CAACW,MAA7B,GAAsC,IAHd;AAIhCb,MAAAA,IAAI,EAAEE,4BAA4B,CAACF,IAA7B,GAAoCc,UAAU,CAACT,eAAe,CAACU,UAAjB,CAA9C,GAA6E,IAJnD;AAKhCd,MAAAA,GAAG,EAAEC,4BAA4B,CAACD,GAA7B,GAAmCa,UAAU,CAACT,eAAe,CAACW,SAAjB,CAA7C,GAA2E;AALhD,KAAnB,CAAf;AAOAhC,IAAAA,UAAU,CAACyB,SAAX,CAAqBC,GAArB,CAAyBvD,kBAAzB;AACA8D,IAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BZ,gBAA1B;;AAEA,QAAIa,uBAAuB,GAAG,SAASA,uBAAT,GAAmC;AAC/D,aAAO;AACLpB,QAAAA,IAAI,EAAEN,eAAe,CAACE,UAAhB,GAA6BD,UAAU,CAACJ,CADzC;AAELU,QAAAA,GAAG,EAAEP,eAAe,CAACG,SAAhB,GAA4BF,UAAU,CAACH;AAFvC,OAAP;AAID,KALD;;AAOA,QAAI6B,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;AACrD,aAAO5B,mBAAmB,CAAC6B,MAApB,CAA2B,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACrD,eAAO;AACLjC,UAAAA,CAAC,EAAEgC,GAAG,CAAChC,CAAJ,GAAQiC,IAAI,CAACjC,CADX;AAELC,UAAAA,CAAC,EAAE+B,GAAG,CAAC/B,CAAJ,GAAQgC,IAAI,CAAChC;AAFX,SAAP;AAID,OALM,EAKJ;AACDD,QAAAA,CAAC,EAAE,CADF;AAEDC,QAAAA,CAAC,EAAE;AAFF,OALI,CAAP;AASD,KAVD;;AAYA,QAAIiC,qBAAqB,GAAGrF,EAAE,CAACsF,MAAD,EAAS,WAAT,EAAsB,UAAUC,cAAV,EAA0B;AAC5E;AACA,UAAI5B,MAAM,GAAG;AACXR,QAAAA,CAAC,EAAE,CAACoC,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACC,KAAhF,KAA0F,CADlF;AAEXpC,QAAAA,CAAC,EAAE,CAACmC,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACE,KAAhF,KAA0F;AAFlF,OAAb;AAIA,UAAIC,oBAAoB,GAAGV,uBAAuB,EAAlD;AACA,UAAIW,qBAAqB,GAAGrC,eAAe,CAACS,qBAAhB,EAA5B;AACAb,MAAAA,yBAAyB,GAAG;AAC1BC,QAAAA,CAAC,EAAEQ,MAAM,CAACR,CAAP,GAAWf,cAAc,CAACoD,KADH;AAE1BpC,QAAAA,CAAC,EAAEO,MAAM,CAACP,CAAP,GAAWhB,cAAc,CAACqD;AAFH,OAA5B;;AAKA,UAAItB,gBAAJ,EAAsB;AACpBxD,QAAAA,cAAc,CAACwD,gBAAD,EAAmBjB,yBAAnB,CAAd;AACD,OAf2E,CAe1E;;;AAGFD,MAAAA,mBAAmB,GAAG,CAAC,CAAvB;AACA,UAAI2C,mBAAmB,GAAG3D,eAAe,CAACK,cAAc,CAACS,IAAf,CAAoB8C,UAArB,CAAzC;AACA,UAAIC,IAAI,GAAG9B,oBAAoB,CAACH,GAArB,IAA4B,CAAvC;AACA,UAAIkC,IAAI,GAAGL,oBAAoB,CAAC7B,GAArB,IAA4B,CAAvC;AACA,UAAImC,cAAc,GAAGF,IAAI,GAAG5C,yBAAyB,CAACE,CAAjC,GAAqC2C,IAA1D;;AAEA,WAAK,IAAIjH,CAAC,GAAG,CAAR,EAAWgB,GAAG,GAAG8F,mBAAmB,CAAC/G,MAA1C,EAAkDC,CAAC,GAAGgB,GAAtD,EAA2DhB,CAAC,EAA5D,EAAgE;AAC9D,YAAImH,qBAAJ;;AAEA,YAAIC,WAAW,GAAGN,mBAAmB,CAAC9G,CAAD,CAAnB,CAAuB+D,IAAzC;AACA,YAAIsD,gBAAgB,GAAG,CAACF,qBAAqB,GAAGL,mBAAmB,CAAC9G,CAAD,CAAnB,CAAuBiE,IAAvB,CAA4BC,KAArD,MAAgE,IAAhE,IAAwEiD,qBAAqB,KAAK,KAAK,CAAvG,GAA2GA,qBAA3G,GAAmI,CAA1J;AACA,YAAIG,OAAO,GAAGtC,4BAA4B,CAACW,MAA7B,GAAsCyB,WAAW,CAACG,YAAlD,GAAiEH,WAAW,CAACG,YAAZ,GAA2B,CAA5F,GAAgGvC,4BAA4B,CAACW,MAA7B,GAAsC,CAApJ;AACA,YAAI6B,SAAS,GAAG;AACdnD,UAAAA,CAAC,EAAE,CADW;AAEdC,UAAAA,CAAC,EAAE;AAFW,SAAhB,CAN8D,CAS3D;;AAEH,YAAImD,aAAa,GAAGX,mBAAmB,CAAC9G,CAAD,CAAnB,CAAuB0H,UAAvB,IAAqClG,aAAa,CAAC4F,WAAD,EAAcxD,gBAAd,CAAtE;AACAkD,QAAAA,mBAAmB,CAAC9G,CAAD,CAAnB,CAAuB0H,UAAvB,GAAoCD,aAApC,CAZ8D,CAYX;;AAEnD,YAAIE,OAAO,GAAG3H,CAAC,GAAG,CAAJ,IAAS8G,mBAAmB,CAAC9G,CAAC,GAAG,CAAL,CAA1C;AACA,YAAI4H,QAAQ,GAAG5H,CAAC,GAAGgB,GAAG,GAAG,CAAV,IAAe8F,mBAAmB,CAAC9G,CAAC,GAAG,CAAL,CAAjD,CAf8D,CAeJ;;AAE1D,YAAI2H,OAAO,IAAI,CAACA,OAAO,CAACD,UAAxB,EAAoC;AAClCC,UAAAA,OAAO,CAACD,UAAR,GAAqBlG,aAAa,CAACmG,OAAO,CAAC5D,IAAT,EAAeH,gBAAf,CAAlC;AACD;;AAED,YAAIgE,QAAQ,IAAI,CAACA,QAAQ,CAACF,UAA1B,EAAsC;AACpCE,UAAAA,QAAQ,CAACF,UAAT,GAAsBlG,aAAa,CAACoG,QAAQ,CAAC7D,IAAV,EAAgBH,gBAAhB,CAAnC;AACD,SAvB6D,CAuB5D;;;AAGF,YAAIyD,gBAAgB,KAAKrD,kBAAzB,EAA6C;AAC3C;AACD;;AAED,YAAI6D,gBAAgB,GAAGJ,aAAa,CAAC1C,GAAd,IAAqB,CAA5C;;AAEA,YAAI4C,OAAO,IAAIN,gBAAgB,GAAGrD,kBAA9B,IAAoDkD,cAAc,GAAGI,OAAjB,IAA4BO,gBAApF,EAAsG;AACpG,cAAIC,mBAAJ;;AAEA,cAAIC,OAAO,GAAG,CAAC,CAAC,CAACD,mBAAmB,GAAGH,OAAO,CAACD,UAA/B,MAA+C,IAA/C,IAAuDI,mBAAmB,KAAK,KAAK,CAApF,GAAwF,KAAK,CAA7F,GAAiGA,mBAAmB,CAAC/C,GAAtH,KAA8H,CAA/H,IAAoI8C,gBAAlJ;AACAL,UAAAA,SAAS,CAAClD,CAAV,GAAcyD,OAAd;AACAxD,UAAAA,mBAAmB,CAAC8C,gBAAD,CAAnB,GAAwC;AACtChD,YAAAA,CAAC,EAAE,CADmC;AAEtCC,YAAAA,CAAC,EAAE,CAACyD;AAFkC,WAAxC;AAIA5D,UAAAA,mBAAmB,GAAGkD,gBAAtB;AACD,SAVD,MAUO,IAAIO,QAAQ,IAAIP,gBAAgB,GAAGrD,kBAA/B,IAAqDkD,cAAc,IAAIW,gBAAgB,GAAGP,OAA9F,EAAuG;AAC5G,cAAIU,oBAAJ;;AAEA,cAAIC,QAAQ,GAAG,CAAC,CAAC,CAACD,oBAAoB,GAAGJ,QAAQ,CAACF,UAAjC,MAAiD,IAAjD,IAAyDM,oBAAoB,KAAK,KAAK,CAAvF,GAA2F,KAAK,CAAhG,GAAoGA,oBAAoB,CAACjD,GAA1H,KAAkI,CAAnI,IAAwI8C,gBAAvJ;;AAEAL,UAAAA,SAAS,CAAClD,CAAV,GAAc2D,QAAd;AACA1D,UAAAA,mBAAmB,CAAC8C,gBAAD,CAAnB,GAAwC;AACtChD,YAAAA,CAAC,EAAE,CADmC;AAEtCC,YAAAA,CAAC,EAAE,CAAC2D;AAFkC,WAAxC;;AAKA,cAAI9D,mBAAmB,KAAK,CAAC,CAA7B,EAAgC;AAC9BA,YAAAA,mBAAmB,GAAGkD,gBAAtB;AACD;AACF,SAdM,MAcA;AACL9C,UAAAA,mBAAmB,CAAC8C,gBAAD,CAAnB,GAAwC;AACtChD,YAAAA,CAAC,EAAE,CADmC;AAEtCC,YAAAA,CAAC,EAAE;AAFmC,WAAxC;AAID;;AAED1C,QAAAA,qBAAqB,CAACwF,WAAD,EAAc9E,kBAAd,CAArB;AACAT,QAAAA,cAAc,CAACuF,WAAD,EAAcI,SAAd,CAAd,CAhE8D,CAgEtB;;AAExC3F,QAAAA,cAAc,CAACiC,UAAD,EAAaqC,kBAAkB,EAA/B,CAAd;AACD;;AAED,UAAIhC,mBAAmB,KAAK,CAAC,CAA7B,EAAgC;AAC9BA,QAAAA,mBAAmB,GAAGH,kBAAtB;AACD,OA/F2E,CA+F1E;;;AAGF,UAAI5B,UAAJ,EAAgB;AACdwC,QAAAA,YAAY,CAACsD,MAAb,CAAoB;AAClBxC,UAAAA,KAAK,EAAEV,4BAA4B,CAACU,KADlB;AAElBC,UAAAA,MAAM,EAAEX,4BAA4B,CAACW,MAFnB;AAGlB6B,UAAAA,SAAS,EAAEpD,yBAHO;AAIlB+D,UAAAA,YAAY,EAAE;AACZ9D,YAAAA,CAAC,EAAE,CADS;AAEZC,YAAAA,CAAC,EAAEuC,qBAAqB,CAAC9B,GAAtB,GAA4B8B,qBAAqB,CAAClB,MAAlD,GAA2DX,4BAA4B,CAACD,GAAxF,GAA8FC,4BAA4B,CAACW,MAA7B,GAAsC;AAF3H,WAJI;AAQlByC,UAAAA,YAAY,EAAE;AACZ/D,YAAAA,CAAC,EAAE,CADS;AAEZC,YAAAA,CAAC,EAAEuC,qBAAqB,CAAC9B,GAAtB,GAA4BC,4BAA4B,CAACD,GAAzD,GAA+DC,4BAA4B,CAACW,MAA7B,GAAsC;AAF5F;AARI,SAApB;AAaD;;AAEDlD,MAAAA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAAC;AACjEsE,QAAAA,UAAU,EAAEvD,cAAc,CAACS,IAAf,CAAoB8C,UADiC;AAEjEhD,QAAAA,IAAI,EAAED,UAF2D;AAGjEuE,QAAAA,QAAQ,EAAErE,kBAHuD;AAIjEsE,QAAAA,QAAQ,EAAEnE;AAJuD,OAAD,EAK/DsC,cAL+D,CAAlE;AAMD,KAxH6B,EAwH3B;AACD8B,MAAAA,OAAO,EAAE;AADR,KAxH2B,CAA9B;AA2HA,QAAIC,oBAAoB,GAAGtH,EAAE,CAACsF,MAAD,EAAS,SAAT,EAAoB,UAAUiC,KAAV,EAAiB;AAChE;AACAlC,MAAAA,qBAAqB,CAACmC,GAAtB;AACAF,MAAAA,oBAAoB,CAACE,GAArB;AACA,UAAIC,eAAe,GAAGxC,kBAAkB,EAAxC;AACA,UAAIS,oBAAoB,GAAGV,uBAAuB,EAAlD;;AAEA,UAAIb,gBAAJ,EAAsB;AACpBxD,QAAAA,cAAc,CAACwD,gBAAD,EAAmB;AAC/BhB,UAAAA,CAAC,EAAEsE,eAAe,CAACtE,CAAhB,IAAqBuC,oBAAoB,CAAC9B,IAArB,IAA6B,CAAlD,CAD4B;AAE/BR,UAAAA,CAAC,EAAEqE,eAAe,CAACrE,CAAhB,IAAqBsC,oBAAoB,CAAC7B,GAArB,IAA4B,CAAjD;AAF4B,SAAnB,CAAd;AAIAnD,QAAAA,qBAAqB,CAACyD,gBAAD,EAAmB/C,kBAAnB,CAArB;AACD,OAb+D,CAa9D;;;AAGFsG,MAAAA,UAAU,CAAC,YAAY;AACrB,YAAIC,kBAAJ,EAAwBC,qBAAxB;;AAEA,YAAI,CAAC1F,SAAS,EAAd,EAAkB,OAHG,CAGK;;AAE1B,SAACyF,kBAAkB,GAAGxD,gBAAtB,MAA4C,IAA5C,IAAoDwD,kBAAkB,KAAK,KAAK,CAAhF,GAAoF,KAAK,CAAzF,GAA6F,CAACC,qBAAqB,GAAGD,kBAAkB,CAACE,UAA5C,MAA4D,IAA5D,IAAoED,qBAAqB,KAAK,KAAK,CAAnG,GAAuG,KAAK,CAA5G,GAAgHA,qBAAqB,CAACE,WAAtB,CAAkC3D,gBAAlC,CAA7M;AACAA,QAAAA,gBAAgB,GAAG,IAAnB,CANqB,CAMI;;AAEzBvB,QAAAA,UAAU,CAACyB,SAAX,CAAqB0D,MAArB,CAA4BhH,kBAA5B;AACAJ,QAAAA,cAAc,CAACiC,UAAD,EAAa,IAAb,CAAd;AACAS,QAAAA,mBAAmB,GAAG,EAAtB;;AAEA,aAAK,IAAI2E,SAAS,GAAG/J,+BAA+B,CAACgE,eAAe,CAACK,cAAc,CAACS,IAAf,CAAoB8C,UAArB,CAAhB,CAA/C,EAAkGoC,KAAvG,EAA8G,CAAC,CAACA,KAAK,GAAGD,SAAS,EAAlB,EAAsBjJ,IAArI,GAA4I;AAC1I,cAAIqG,IAAI,GAAG6C,KAAK,CAACjJ,KAAjB,CAD0I,CAE1I;;AACAoG,UAAAA,IAAI,CAACoB,UAAL,GAAkB,IAAlB,CAH0I,CAGlH;;AAExB,cAAI0B,EAAE,GAAG9C,IAAI,CAACvC,IAAd;AACAlC,UAAAA,cAAc,CAACuH,EAAD,EAAK,IAAL,CAAd;AACAxH,UAAAA,qBAAqB,CAACwH,EAAD,EAAK,IAAL,CAArB;AACD,SApBoB,CAoBnB;;;AAGFxE,QAAAA,YAAY,CAACyE,KAAb,GAvBqB,CAuBC;;AAEtBxG,QAAAA,UAAU,CAAC,KAAD,CAAV,CAzBqB,CAyBF;;AAEnB,YAAIyG,eAAe,GAAG;AACpBvC,UAAAA,UAAU,EAAEvD,cAAc,CAACS,IAAf,CAAoB8C,UADZ;AAEpBhD,UAAAA,IAAI,EAAEP,cAAc,CAACO,IAFD;AAGpBuE,UAAAA,QAAQ,EAAEnE,mBAHU;AAIpBkE,UAAAA,QAAQ,EAAErE;AAJU,SAAtB;AAMAxB,QAAAA,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAAC8G,eAAD,EAAkBb,KAAlB,CAA/D;AACAlG,QAAAA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAAC+G,eAAD,EAAkBb,KAAlB,CAAtD;AACD,OAnCS,EAmCPnG,kBAnCO,CAAV;AAoCD,KApD4B,EAoD1B;AACDiG,MAAAA,OAAO,EAAE;AADR,KApD0B,CAA7B;AAuDA1F,IAAAA,UAAU,CAAC,IAAD,CAAV,CA7OmF,CA6OjE;;AAElBH,IAAAA,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAAC;AACpEqE,MAAAA,UAAU,EAAEvD,cAAc,CAACS,IAAf,CAAoB8C,UADoC;AAEpEhD,MAAAA,IAAI,EAAED,UAF8D;AAGpEuE,MAAAA,QAAQ,EAAErE,kBAH0D;AAIpEsE,MAAAA,QAAQ,EAAEnE;AAJ0D,KAAD,EAKlEb,cAAc,CAACiG,WALmD,CAArE;AAMD,GArP4B,EAqP1B,CAACnH,UAAD,EAAae,eAAb,EAA8BC,SAA9B,EAAyCb,MAAzC,EAAiDC,SAAjD,EAA4DC,UAA5D,EAAwEC,WAAxE,EAAqFJ,kBAArF,CArP0B,CAA7B;AAsPA;;;;AAIA,MAAIkH,WAAW,GAAGrI,WAAW,CAAC,UAAUmC,cAAV,EAA0B;AACtD,QAAImG,aAAa,GAAGnG,cAAc,CAACoG,MAAnC;AACA,QAAIC,UAAU,GAAGpI,WAAW,CAACkI,aAAD,EAAgB,UAAUL,EAAV,EAAc;AACxD,aAAOQ,OAAO,CAAC1G,cAAc,CAACkG,EAAD,CAAf,CAAd;AACD,KAF2B,CAA5B;AAGA,QAAI5F,cAAc,GAAGN,cAAc,CAACyG,UAAD,CAAnC;;AAEA,SAAK;AACLrG,IAAAA,cAAc,CAACuG,MAAf,KAA0B,CAA1B,IAA+B;AAC/BD,IAAAA,OAAO,CAACpG,cAAD,CADP,IAC2B,CAACA,cAAc,CAACS,IAAf,CAAoB6F,QADhD,IAC4D;AAC5D,KAAClH,OAFD,IAEY;AACZ+G,IAAAA,UAAU,YAAYI,WAHtB,IAGqC;AACrC,KAACJ,UAAU,CAACK,QAAX,CAAoBzI,WAAW,CAACkI,aAAD,EAAgB/H,2BAAhB,CAA/B,CALD,EAK+E;AAC7E4B,MAAAA,cAAc,CAAC2G,cAAf;AACAlH,MAAAA,UAAU,CAACc,OAAX,GAAqB+E,UAAU,CAACvF,WAAD,EAAchB,UAAd,EAA0BiB,cAA1B,EAA0CqG,UAA1C,EAAsDnG,cAAtD,CAA/B;AACD;AACF,GAhB4B,EAgB1B,CAACN,cAAD,EAAiBG,WAAjB,EAA8BhB,UAA9B,EAA0CO,OAA1C,CAhB0B,CAA7B;AAiBA;;;;AAIA,MAAIsH,SAAS,GAAG/I,WAAW,CAAC,YAAY;AACtC,WAAOgJ,YAAY,CAACpH,UAAU,CAACc,OAAZ,CAAnB;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO;AACL2F,IAAAA,WAAW,EAAEA,WADR;AAELU,IAAAA,SAAS,EAAEA,SAFN;AAGLpH,IAAAA,YAAY,EAAEA,YAHT;AAILF,IAAAA,OAAO,EAAEA,OAJJ;AAKLwH,IAAAA,QAAQ,EAAEnH;AALL,GAAP;AAOD,CAnTD;;AAqTA,eAAef,aAAf","sourcesContent":["function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from './AutoScroller';\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from './utils';\nimport { useIsMounted } from '../../utils';\nimport useManager from './useManager';\nvar helperElementClass = 'rs-list-item-helper';\nvar holderElementClass = 'rs-list-item-holder';\n\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n      pressDelay = config.pressDelay,\n      transitionDuration = config.transitionDuration,\n      onSort = config.onSort,\n      onSortEnd = config.onSortEnd,\n      onSortMove = config.onSortMove,\n      onSortStart = config.onSortStart;\n\n  var _useState = useState(false),\n      sorting = _useState[0],\n      setSorting = _useState[1];\n\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n\n  var _useManager = useManager(),\n      listItemRegister = _useManager.listItemRegister,\n      getManagedItem = _useManager.getManagedItem,\n      getOrderedItems = _useManager.getOrderedItems;\n\n  var isMounted = useIsMounted();\n  /**\n   * start dragging\n   * */\n\n  var handlePress = useCallback(function (mouseDownEvent, _targetNode, curManagedItem) {\n    var _curManagedItem$info$, _curManagedItem$info$2, _activeNodeHelper;\n\n    if (!isMounted()) return; // data\n\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = (_curManagedItem$info$ = curManagedItem.info.index) !== null && _curManagedItem$info$ !== void 0 ? _curManagedItem$info$ : 0;\n    var activeNodeNextIndex = (_curManagedItem$info$2 = curManagedItem.info.index) !== null && _curManagedItem$info$2 !== void 0 ? _curManagedItem$info$2 : 0;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n    // init scroller\n\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 ? void 0 : _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n\n    var sortMouseMoveListener = on(window, 'mousemove', function (mouseOverEvent) {\n      // Update helper position\n      var offset = {\n        x: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageX) || 0,\n        y: (mouseOverEvent === null || mouseOverEvent === void 0 ? void 0 : mouseOverEvent.pageY) || 0\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - mouseDownEvent.pageX,\n        y: offset.y - mouseDownEvent.pageY\n      };\n\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, activeNodeHolderTranslate);\n      } // animate\n\n\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var aTop = activeNodeOffsetEdge.top || 0;\n      var cTop = containerScrollDelta.top || 0;\n      var sortingOffsetY = aTop + activeNodeHolderTranslate.y + cTop;\n\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var _listItemManagerRefs$;\n\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = (_listItemManagerRefs$ = listItemManagerRefs[i].info.index) !== null && _listItemManagerRefs$ !== void 0 ? _listItemManagerRefs$ : 0;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        }; // If we haven't cached the node's offsetTop / offsetLeft value\n\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset; // Get a reference to the next node\n\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1]; // Also cache the node's edge offset if needed.\n\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        } // If the node is the one we're currently animating, skip it\n\n\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n\n        var curEdgeOffsetTop = curEdgeOffset.top || 0;\n\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffsetTop) {\n          var _prvNode$edgeOffset;\n\n          var yOffset = (((_prvNode$edgeOffset = prvNode.edgeOffset) === null || _prvNode$edgeOffset === void 0 ? void 0 : _prvNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n          translate.y = yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -yOffset\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffsetTop + offsetY) {\n          var _nextNode$edgeOffset;\n\n          var _yOffset = (((_nextNode$edgeOffset = nextNode.edgeOffset) === null || _nextNode$edgeOffset === void 0 ? void 0 : _nextNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n\n          translate.y = _yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -_yOffset\n          };\n\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate); // translate holder\n\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      } // auto scroll\n\n\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            x: 0,\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            x: 0,\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n\n      onSortMove === null || onSortMove === void 0 ? void 0 : onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, mouseOverEvent);\n    }, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', function (event) {\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, {\n          x: holderTranslate.x - (containerScrollDelta.left || 0),\n          y: holderTranslate.y - (containerScrollDelta.top || 0)\n        });\n        setTransitionDuration(activeNodeHelper, transitionDuration);\n      } // wait for animation\n\n\n      setTimeout(function () {\n        var _activeNodeHelper2, _activeNodeHelper2$pa;\n\n        if (!isMounted()) return; // Remove the helper from the DOM\n\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 ? void 0 : (_activeNodeHelper2$pa = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2$pa === void 0 ? void 0 : _activeNodeHelper2$pa.removeChild(activeNodeHelper);\n        activeNodeHelper = null; // Remove redundant styles\n\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value;\n          // Clear the cached offsetTop / offsetLeft value\n          item.edgeOffset = null; // Remove the transforms / transitions\n\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        } // Stop autoScroll\n\n\n        autoScroller.clear(); // Update manager state\n\n        setSorting(false); // callbacks\n\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 ? void 0 : onSortEnd(callbackPayload, event);\n        onSort === null || onSort === void 0 ? void 0 : onSort(callbackPayload, event);\n      }, transitionDuration);\n    }, {\n      passive: false\n    });\n    setSorting(true); // start callback\n\n    onSortStart === null || onSortStart === void 0 ? void 0 : onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, mouseDownEvent.nativeEvent);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n  /**\n   * Determine whether to start dragging\n   * */\n\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n\n    if ( // is not secondary button pressed\n    mouseDownEvent.button !== 2 && // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled && // is not sorting\n    !sorting && // is valid node\n    targetNode instanceof HTMLElement && // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n  /**\n   * Clear timer after drag\n   * */\n\n  var handleEnd = useCallback(function () {\n    return clearTimeout(pressTimer.current);\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\n\nexport default useSortHelper;"]},"metadata":{},"sourceType":"module"}