{"ast":null,"code":"var _jsxFileName = \"/home/ueslei/Documentos/GitHub/testefrontamai/src/pages/Player/App.js\";\nimport React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Import components\n\nimport Player from \"./Player\";\nimport Song from \"./Song\";\nimport Library from \"./Library\";\nimport Nav from \"./Nav\";\nimport Credit from \"./Credit\"; // Import data\n\nimport data from \"./data\";\n\nconst App = () => {\n  // Ref\n  const audioRef = useRef(null); // State\n\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  }); // Functions\n\n  const updateTimeHandler = e => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime,\n      duration\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n    let nextSong = songs[(currentIndex + 1) % songs.length];\n    await setCurrentSong(nextSong);\n    const newSongs = songs.map(song => {\n      if (song.id === nextSong.id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs);\n\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card mt-4 bg-warning bg-opacity-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppContainer, {\n    libraryStatus: libraryStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    libraryStatus: libraryStatus,\n    setLibraryStatus: setLibraryStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Song, {\n    currentSong: currentSong,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Player, {\n    isPlaying: isPlaying,\n    setIsPlaying: setIsPlaying,\n    currentSong: currentSong,\n    setCurrentSong: setCurrentSong,\n    audioRef: audioRef,\n    songInfo: songInfo,\n    setSongInfo: setSongInfo,\n    songs: songs,\n    setSongs: setSongs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Library, {\n    songs: songs,\n    setCurrentSong: setCurrentSong,\n    audioRef: audioRef,\n    isPlaying: isPlaying,\n    setSongs: setSongs,\n    libraryStatus: libraryStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Credit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    onLoadedMetadata: updateTimeHandler,\n    onTimeUpdate: updateTimeHandler,\n    onEnded: songEndHandler,\n    ref: audioRef,\n    src: currentSong.audio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  })))));\n};\n\nconst AppContainer = styled.div`\n\ttransition: all 0.5s ease;\n\tmargin-left: ${p => p.libraryStatus ? \"20rem\" : \"0\"};\n\t@media screen and (max-width: 768px) {\n\t\tmargin-left: 0;\n\t}\n`;\nexport default App;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/testefrontamai/src/pages/Player/App.js"],"names":["React","useState","useRef","styled","Player","Song","Library","Nav","Credit","data","App","audioRef","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","libraryStatus","setLibraryStatus","songInfo","setSongInfo","currentTime","duration","updateTimeHandler","e","target","songEndHandler","currentIndex","findIndex","song","id","nextSong","length","newSongs","map","active","current","play","audio","AppContainer","div","p"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Import components\nimport Player from \"./Player\";\nimport Song from \"./Song\";\nimport Library from \"./Library\";\nimport Nav from \"./Nav\";\nimport Credit from \"./Credit\";\n// Import data\nimport data from \"./data\";\n\nconst App = () => {\n\t// Ref\n\tconst audioRef = useRef(null);\n\n\t// State\n\tconst [songs, setSongs] = useState(data());\n\tconst [currentSong, setCurrentSong] = useState(songs[0]);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [libraryStatus, setLibraryStatus] = useState(false);\n\tconst [songInfo, setSongInfo] = useState({\n\t\tcurrentTime: 0,\n\t\tduration: 0,\n\t});\n\n\t// Functions\n\tconst updateTimeHandler = (e) => {\n\t\tconst currentTime = e.target.currentTime;\n\t\tconst duration = e.target.duration;\n\t\tsetSongInfo({ ...songInfo, currentTime, duration });\n\t};\n\n\tconst songEndHandler = async () => {\n\t\tlet currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\t\tlet nextSong = songs[(currentIndex + 1) % songs.length];\n\t\tawait setCurrentSong(nextSong);\n\n\t\tconst newSongs = songs.map((song) => {\n\t\t\tif (song.id === nextSong.id) {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: true,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...song,\n\t\t\t\t\tactive: false,\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\tsetSongs(newSongs);\n\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.play();\n\t\t}\n\t};\n\n\treturn (\n\t\t\n    <div className=\"container\">\n    <div className=\"card mt-4 bg-warning bg-opacity-75\">\n      <div className=\"card-title\">\n    \n    <AppContainer libraryStatus={libraryStatus}>\n\t\t\t<Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n\t\t\t<Song currentSong={currentSong} />\n\t\t\t<Player\n\t\t\t\tisPlaying={isPlaying}\n\t\t\t\tsetIsPlaying={setIsPlaying}\n\t\t\t\tcurrentSong={currentSong}\n\t\t\t\tsetCurrentSong={setCurrentSong}\n\t\t\t\taudioRef={audioRef}\n\t\t\t\tsongInfo={songInfo}\n\t\t\t\tsetSongInfo={setSongInfo}\n\t\t\t\tsongs={songs}\n\t\t\t\tsetSongs={setSongs}\n\t\t\t/>\n\t\t\t<Library\n\t\t\t\tsongs={songs}\n\t\t\t\tsetCurrentSong={setCurrentSong}\n\t\t\t\taudioRef={audioRef}\n\t\t\t\tisPlaying={isPlaying}\n\t\t\t\tsetSongs={setSongs}\n\t\t\t\tlibraryStatus={libraryStatus}\n\t\t\t/>\n\t\t\t<Credit />\n\t\t\t<audio\n\t\t\t\tonLoadedMetadata={updateTimeHandler}\n\t\t\t\tonTimeUpdate={updateTimeHandler}\n\t\t\t\tonEnded={songEndHandler}\n\t\t\t\tref={audioRef}\n\t\t\t\tsrc={currentSong.audio}\n\t\t\t/>\n\t\t</AppContainer>\n    </div>\n    </div>\n    </div>\n\t);\n};\n\nconst AppContainer = styled.div`\n\ttransition: all 0.5s ease;\n\tmargin-left: ${(p) => (p.libraryStatus ? \"20rem\" : \"0\")};\n\t@media screen and (max-width: 768px) {\n\t\tmargin-left: 0;\n\t}\n`;\n\nexport default App;"]},"metadata":{},"sourceType":"module"}