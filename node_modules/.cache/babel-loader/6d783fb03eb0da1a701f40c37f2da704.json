{"ast":null,"code":"import { DateUtils } from '../utils';\nexport var setTimingMargin = function setTimingMargin(date, way) {\n  if (way === void 0) {\n    way = 'left';\n  }\n\n  return way === 'right' ? DateUtils.endOfDay(date) : DateUtils.startOfDay(date);\n};\nexport function getCalendarDate(_ref) {\n  var _value;\n\n  var value = _ref.value,\n      _ref$calendarKey = _ref.calendarKey,\n      calendarKey = _ref$calendarKey === void 0 ? 'start' : _ref$calendarKey; // Update calendarDate if the value is not null\n\n  value = (_value = value) !== null && _value !== void 0 ? _value : [];\n\n  if (value[0] && value[1]) {\n    var startMonth = DateUtils.getMonth(value[0]);\n    var endMonth = DateUtils.getMonth(value[1]);\n\n    if (calendarKey === 'start') {\n      return [value[0], startMonth >= endMonth ? DateUtils.addMonths(value[0], 1) : value[1]];\n    } else if (calendarKey === 'end') {\n      return [startMonth >= endMonth ? DateUtils.addMonths(value[1], -1) : value[0], value[1]];\n    } // If only the start date\n\n  } else if (value[0]) {\n    return [value[0], DateUtils.addMonths(value[0], 1)];\n  }\n\n  var todayDate = new Date();\n  return [todayDate, DateUtils.addMonths(todayDate, 1)];\n}\nexport var getDefaultRanges = function getDefaultRanges() {\n  var todayDate = new Date();\n  return [{\n    label: 'today',\n    value: [setTimingMargin(todayDate), setTimingMargin(todayDate, 'right')]\n  }, {\n    label: 'yesterday',\n    value: [setTimingMargin(DateUtils.addDays(todayDate, -1)), setTimingMargin(DateUtils.addDays(todayDate, -1), 'right')]\n  }, {\n    label: 'last7Days',\n    value: [setTimingMargin(DateUtils.subDays(todayDate, 6)), setTimingMargin(todayDate, 'right')]\n  }];\n};\nexport var isSameRange = function isSameRange(source, dest, format) {\n  // If both are null, reguard as same\n  if (null === source && null === dest) return true; // If only one is null, regard as different\n\n  if (null === source || null === dest) return false;\n  var result = DateUtils.isSameDay(source[0], dest[0]) && DateUtils.isSameDay(source[1], dest[1]);\n\n  if (DateUtils.shouldTime(format)) {\n    result && (result = DateUtils.isSameSecond(source[0], dest[0]) && DateUtils.isSameSecond(source[1], dest[1]));\n  }\n\n  return result;\n};\nexport var getMonthHoverRange = function getMonthHoverRange(date) {\n  return [DateUtils.startOfMonth(date), DateUtils.endOfMonth(date)];\n};\nexport var getWeekHoverRange = function getWeekHoverRange(isoWeek, date) {\n  if (isoWeek) {\n    // set to the first day of this week according to ISO 8601, 12:00 am\n    return [DateUtils.startOfISOWeek(date), DateUtils.endOfISOWeek(date)];\n  }\n\n  return [DateUtils.startOfWeek(date), DateUtils.endOfWeek(date)];\n};","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/testefrontamai/node_modules/rsuite/esm/DateRangePicker/utils.js"],"names":["DateUtils","setTimingMargin","date","way","endOfDay","startOfDay","getCalendarDate","_ref","_value","value","_ref$calendarKey","calendarKey","startMonth","getMonth","endMonth","addMonths","todayDate","Date","getDefaultRanges","label","addDays","subDays","isSameRange","source","dest","format","result","isSameDay","shouldTime","isSameSecond","getMonthHoverRange","startOfMonth","endOfMonth","getWeekHoverRange","isoWeek","startOfISOWeek","endOfISOWeek","startOfWeek","endOfWeek"],"mappings":"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","sourcesContent":["import { DateUtils } from '../utils';\nexport var setTimingMargin = function setTimingMargin(date, way) {\n  if (way === void 0) {\n    way = 'left';\n  }\n\n  return way === 'right' ? DateUtils.endOfDay(date) : DateUtils.startOfDay(date);\n};\nexport function getCalendarDate(_ref) {\n  var _value;\n\n  var value = _ref.value,\n      _ref$calendarKey = _ref.calendarKey,\n      calendarKey = _ref$calendarKey === void 0 ? 'start' : _ref$calendarKey;\n  // Update calendarDate if the value is not null\n  value = (_value = value) !== null && _value !== void 0 ? _value : [];\n\n  if (value[0] && value[1]) {\n    var startMonth = DateUtils.getMonth(value[0]);\n    var endMonth = DateUtils.getMonth(value[1]);\n\n    if (calendarKey === 'start') {\n      return [value[0], startMonth >= endMonth ? DateUtils.addMonths(value[0], 1) : value[1]];\n    } else if (calendarKey === 'end') {\n      return [startMonth >= endMonth ? DateUtils.addMonths(value[1], -1) : value[0], value[1]];\n    } // If only the start date\n\n  } else if (value[0]) {\n    return [value[0], DateUtils.addMonths(value[0], 1)];\n  }\n\n  var todayDate = new Date();\n  return [todayDate, DateUtils.addMonths(todayDate, 1)];\n}\nexport var getDefaultRanges = function getDefaultRanges() {\n  var todayDate = new Date();\n  return [{\n    label: 'today',\n    value: [setTimingMargin(todayDate), setTimingMargin(todayDate, 'right')]\n  }, {\n    label: 'yesterday',\n    value: [setTimingMargin(DateUtils.addDays(todayDate, -1)), setTimingMargin(DateUtils.addDays(todayDate, -1), 'right')]\n  }, {\n    label: 'last7Days',\n    value: [setTimingMargin(DateUtils.subDays(todayDate, 6)), setTimingMargin(todayDate, 'right')]\n  }];\n};\nexport var isSameRange = function isSameRange(source, dest, format) {\n  // If both are null, reguard as same\n  if (null === source && null === dest) return true; // If only one is null, regard as different\n\n  if (null === source || null === dest) return false;\n  var result = DateUtils.isSameDay(source[0], dest[0]) && DateUtils.isSameDay(source[1], dest[1]);\n\n  if (DateUtils.shouldTime(format)) {\n    result && (result = DateUtils.isSameSecond(source[0], dest[0]) && DateUtils.isSameSecond(source[1], dest[1]));\n  }\n\n  return result;\n};\nexport var getMonthHoverRange = function getMonthHoverRange(date) {\n  return [DateUtils.startOfMonth(date), DateUtils.endOfMonth(date)];\n};\nexport var getWeekHoverRange = function getWeekHoverRange(isoWeek, date) {\n  if (isoWeek) {\n    // set to the first day of this week according to ISO 8601, 12:00 am\n    return [DateUtils.startOfISOWeek(date), DateUtils.endOfISOWeek(date)];\n  }\n\n  return [DateUtils.startOfWeek(date), DateUtils.endOfWeek(date)];\n};"]},"metadata":{},"sourceType":"module"}