{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n    _excluded2 = [\"depth\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\n\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents);\n\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\n\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n      className = props.className,\n      _props$data = props.data,\n      dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n      _props$defaultSortTyp = props.defaultSortType,\n      defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? true : _props$hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  } : _props$locale,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      sortColumn = props.sortColumn,\n      _props$rowHeight = props.rowHeight,\n      rowHeight = _props$rowHeight === void 0 ? 46 : _props$rowHeight,\n      sortTypeProp = props.sortType,\n      _props$headerHeight = props.headerHeight,\n      headerHeightProp = _props$headerHeight === void 0 ? 40 : _props$headerHeight,\n      _props$minHeight = props.minHeight,\n      minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 200 : _props$height,\n      autoHeight = props.autoHeight,\n      fillHeight = props.fillHeight,\n      rtlProp = props.rtl,\n      _props$translate3d = props.translate3d,\n      translate3d = _props$translate3d === void 0 ? true : _props$translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowClassName = props.rowClassName,\n      _props$rowExpandedHei = props.rowExpandedHeight,\n      rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      _props$shouldUpdateSc = props.shouldUpdateScroll,\n      shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (isTree && !rowKey) {\n    throw new Error('The `rowKey` is required when set isTree');\n  }\n\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight(rowData) {\n    if (rowData === void 0) {\n      rowData = {};\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight(rowData) : rowHeight;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  })); // Check for the existence of fixed columns in all column properties.\n\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  }); // Check all column properties for the existence of rowSpan.\n\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    minHeight: minHeight,\n    autoHeight: autoHeight,\n    fillHeight: fillHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    showHeader: showHeader,\n    onTableScroll: debounce(function (coords) {\n      return onScrollTo(coords);\n    }, 100),\n    onTableResizeChange: handleTableResizeChange\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX,\n      getTableHeight = _useTableDimension.getTableHeight;\n\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    // Force table update after column width change, so scrollbar re-renders.\n    onHeaderCellResize: forceUpdate,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current; // Whether to show vertical scroll bar\n\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight; // Whether to show the horizontal scroll bar\n\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n\n  var rowSpanState = useRef({});\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var rowProps = _extends({}, props, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _rowSpanState$current, _cell$props3, _rowSpanState$current2;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n\n      var _rowHeight = rowSpan ? rowSpan * (props.height || 46) : props.height;\n\n      var _cellKey = cell.props.dataKey || i; // Record the cell state of the merged row\n\n\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1; // Restart counting when merged to the last cell.\n\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      } // Cells marked as deleted when checking for merged cell.\n\n\n      var removedCell = (_cell$props3 = cell.props) !== null && _cell$props3 !== void 0 && _cell$props3.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        wordWrap: wordWrap,\n        height: _rowHeight,\n        rowIndex: props.key,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    var scrollbars = [];\n\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n\n    return scrollbars;\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var shouldRender = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n\n            if (shouldRender) {\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: top,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight\n          };\n          top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, shouldRender));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/testefrontamai/node_modules/rsuite-table/es/Table.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","useState","useRef","useCallback","useImperativeHandle","useReducer","getTranslateDOMPositionXY","PropTypes","isFunction","flatten","debounce","Row","CellGroup","Scrollbar","MouseArea","Loader","EmptyMessage","TableContext","SCROLLBAR_WIDTH","CELL_PADDING_HEIGHT","SORT_TYPE","EXPANDED_KEY","TREE_DEPTH","mergeCells","flattenData","isRTL","findRowKeys","findAllParents","shouldShowRowByExpanded","resetLeftForCells","useClassNames","useControlled","useUpdateEffect","useCellDescriptor","useTableDimension","useTableRows","useAffix","useScrollListener","usePosition","isSupportTouchEvent","filterTreeData","data","expandedRowKeys","rowKey","filter","rowData","parents","_expanded","length","DATA_PLACEHOLDER","Table","forwardRef","props","ref","affixHeader","children","_props$classPrefix","classPrefix","className","_props$data","dataProp","_props$defaultSortTyp","defaultSortType","DESC","widthProp","width","expandedRowKeysProp","defaultExpandAllRows","defaultExpandedRowKeys","style","id","isTree","_props$hover","hover","bordered","cellBordered","wordWrap","loading","_props$locale","locale","emptyMessage","_props$showHeader","showHeader","sortColumn","_props$rowHeight","rowHeight","sortTypeProp","sortType","_props$headerHeight","headerHeight","headerHeightProp","_props$minHeight","minHeight","_props$height","height","autoHeight","fillHeight","rtlProp","rtl","_props$translate3d","translate3d","virtualized","rowClassName","_props$rowExpandedHei","rowExpandedHeight","disabledScroll","affixHorizontalScrollbar","loadAnimation","_props$shouldUpdateSc","shouldUpdateScroll","renderRowProp","renderRow","renderRowExpandedProp","renderRowExpanded","renderLoading","renderEmpty","onSortColumn","onScroll","renderTreeToggle","onRowClick","onRowContextMenu","onExpandChange","onTouchStart","onTouchMove","onTouchEnd","rest","Error","_useClassNames","withClassPrefix","mergeCls","merge","prefix","_useReducer","x","forceUpdate","_useControlled","setExpandedRowKeys","_useState","setData","_useTableRows","tableRowsMaxHeight","bindTableRowsRef","getRowHeight","translateDOMPositionXY","forceUseTransform","enable3DTransform","shouldFixedColumn","Array","from","some","child","_child$props","fixed","shouldRowSpanColumn","_child$props2","rowSpan","visibleRows","mouseAreaRef","tableRef","tableHeaderRef","affixHeaderWrapperRef","headerWrapperRef","tableBodyRef","wheelWrapperRef","scrollbarXRef","scrollbarYRef","handleTableResizeChange","_prevSize","event","onScrollTo","vertical","onScrollTop","onScrollLeft","_useTableDimension","onTableScroll","coords","onTableResizeChange","contentHeight","contentWidth","minScrollY","minScrollX","scrollY","scrollX","tableWidth","tableOffset","headerOffset","setScrollY","setScrollX","getTableHeight","_usePosition","forceUpdatePosition","_useScrollListener","isScrolling","onScrollHorizontal","onScrollVertical","onScrollBody","_useCellDescriptor","onHeaderCellResize","headerCells","bodyCells","allColumnsWidth","hasCustomTreeCol","colCounts","current","root","body","scrollTop","scrollLeft","rowWidth","hasVerticalScrollbar","hasHorizontalScrollbar","classes","treetable","styles","createElement","cells","shouldRenderExpandedRow","depth","restRowProps","rowStyles","rowRight","right","rowNode","fixedLeftCells","fixedRightCells","scrollCells","fixedLeftCellGroupWidth","fixedRightCellGroupWidth","i","cell","_cell$props","isFixedStart","isFixedEnd","push","Fragment","isHeaderRow","undefined","left","renderTableHeader","top","rowProps","rowRef","fixedStyle","position","overflow","header","role","key","bindRowClick","bindRowContextMenu","handleTreeToggle","treeRowKey","_rowIndex","open","nextExpandedRowKeys","rowSpanState","renderRowData","hasChildren","isArray","nextRowKey","onClick","onContextMenu","expanded","_cell$props2","_cell$props2$rowSpan","_rowSpanState$current","_cell$props3","_rowSpanState$current2","call","_rowHeight","_cellKey","dataKey","removedCell","cloneElement","rowIndex","onTreeToggle","removed","renderScrollbar","scrollbars","tableId","scrollLength","renderTableBody","_visibleRows$current","bodyHeight","bodyStyles","topHideHeight","bottomHideHeight","minTop","Math","abs","maxTop","isCustomRowHeight","isUncertainHeight","coveredHeight","max","index","_rowData","maxHeight","shouldRender","nextRowHeight","_nextRowHeight","startIndex","floor","endIndex","min","ceil","coveredCount","_index","_rowData2","_rowProps","wheelStyles","pointerEvents","topRowStyles","bottomRowStyles","addPrefix","contextValue","useMemo","Provider","value","displayName","propTypes","bool","oneOfType","number","string","any","array","object","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"affixHeader\", \"children\", \"classPrefix\", \"className\", \"data\", \"defaultSortType\", \"width\", \"expandedRowKeys\", \"defaultExpandAllRows\", \"defaultExpandedRowKeys\", \"style\", \"id\", \"isTree\", \"hover\", \"bordered\", \"cellBordered\", \"wordWrap\", \"loading\", \"locale\", \"showHeader\", \"sortColumn\", \"rowHeight\", \"sortType\", \"headerHeight\", \"minHeight\", \"height\", \"autoHeight\", \"fillHeight\", \"rtl\", \"translate3d\", \"rowKey\", \"virtualized\", \"rowClassName\", \"rowExpandedHeight\", \"disabledScroll\", \"affixHorizontalScrollbar\", \"loadAnimation\", \"shouldUpdateScroll\", \"renderRow\", \"renderRowExpanded\", \"renderLoading\", \"renderEmpty\", \"onSortColumn\", \"onScroll\", \"renderTreeToggle\", \"onRowClick\", \"onRowContextMenu\", \"onExpandChange\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\"],\n    _excluded2 = [\"depth\"];\nimport React, { useState, useRef, useCallback, useImperativeHandle, useReducer } from 'react';\nimport { getTranslateDOMPositionXY } from 'dom-lib/translateDOMPositionXY';\nimport PropTypes from 'prop-types';\nimport isFunction from 'lodash/isFunction';\nimport flatten from 'lodash/flatten';\nimport debounce from 'lodash/debounce';\nimport Row from './Row';\nimport CellGroup from './CellGroup';\nimport Scrollbar from './Scrollbar';\nimport MouseArea from './MouseArea';\nimport Loader from './Loader';\nimport EmptyMessage from './EmptyMessage';\nimport TableContext from './TableContext';\nimport { SCROLLBAR_WIDTH, CELL_PADDING_HEIGHT, SORT_TYPE, EXPANDED_KEY, TREE_DEPTH } from './constants';\nimport { mergeCells, flattenData, isRTL, findRowKeys, findAllParents, shouldShowRowByExpanded, resetLeftForCells, useClassNames, useControlled, useUpdateEffect, useCellDescriptor, useTableDimension, useTableRows, useAffix, useScrollListener, usePosition, isSupportTouchEvent } from './utils';\n\n/**\n * Filter those expanded nodes.\n * @param data\n * @param expandedRowKeys\n * @param rowKey\n * @returns\n */\nvar filterTreeData = function filterTreeData(data, expandedRowKeys, rowKey) {\n  return flattenData(data).filter(function (rowData) {\n    if (rowKey) {\n      var parents = findAllParents(rowData, rowKey);\n\n      var _expanded = shouldShowRowByExpanded(expandedRowKeys, parents);\n\n      rowData[EXPANDED_KEY] = _expanded;\n      rowData[TREE_DEPTH] = parents.length;\n      return _expanded;\n    }\n  });\n};\n\nvar DATA_PLACEHOLDER = [];\nvar Table = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var affixHeader = props.affixHeader,\n      children = props.children,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'rs-table' : _props$classPrefix,\n      className = props.className,\n      _props$data = props.data,\n      dataProp = _props$data === void 0 ? DATA_PLACEHOLDER : _props$data,\n      _props$defaultSortTyp = props.defaultSortType,\n      defaultSortType = _props$defaultSortTyp === void 0 ? SORT_TYPE.DESC : _props$defaultSortTyp,\n      widthProp = props.width,\n      expandedRowKeysProp = props.expandedRowKeys,\n      defaultExpandAllRows = props.defaultExpandAllRows,\n      defaultExpandedRowKeys = props.defaultExpandedRowKeys,\n      style = props.style,\n      id = props.id,\n      isTree = props.isTree,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? true : _props$hover,\n      bordered = props.bordered,\n      cellBordered = props.cellBordered,\n      wordWrap = props.wordWrap,\n      loading = props.loading,\n      _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {\n    emptyMessage: 'No data found',\n    loading: 'Loading...'\n  } : _props$locale,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      sortColumn = props.sortColumn,\n      _props$rowHeight = props.rowHeight,\n      rowHeight = _props$rowHeight === void 0 ? 46 : _props$rowHeight,\n      sortTypeProp = props.sortType,\n      _props$headerHeight = props.headerHeight,\n      headerHeightProp = _props$headerHeight === void 0 ? 40 : _props$headerHeight,\n      _props$minHeight = props.minHeight,\n      minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 200 : _props$height,\n      autoHeight = props.autoHeight,\n      fillHeight = props.fillHeight,\n      rtlProp = props.rtl,\n      _props$translate3d = props.translate3d,\n      translate3d = _props$translate3d === void 0 ? true : _props$translate3d,\n      rowKey = props.rowKey,\n      virtualized = props.virtualized,\n      rowClassName = props.rowClassName,\n      _props$rowExpandedHei = props.rowExpandedHeight,\n      rowExpandedHeight = _props$rowExpandedHei === void 0 ? 100 : _props$rowExpandedHei,\n      disabledScroll = props.disabledScroll,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      loadAnimation = props.loadAnimation,\n      _props$shouldUpdateSc = props.shouldUpdateScroll,\n      shouldUpdateScroll = _props$shouldUpdateSc === void 0 ? true : _props$shouldUpdateSc,\n      renderRowProp = props.renderRow,\n      renderRowExpandedProp = props.renderRowExpanded,\n      renderLoading = props.renderLoading,\n      renderEmpty = props.renderEmpty,\n      onSortColumn = props.onSortColumn,\n      onScroll = props.onScroll,\n      renderTreeToggle = props.renderTreeToggle,\n      onRowClick = props.onRowClick,\n      onRowContextMenu = props.onRowContextMenu,\n      onExpandChange = props.onExpandChange,\n      onTouchStart = props.onTouchStart,\n      onTouchMove = props.onTouchMove,\n      onTouchEnd = props.onTouchEnd,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (isTree && !rowKey) {\n    throw new Error('The `rowKey` is required when set isTree');\n  }\n\n  var _useClassNames = useClassNames(classPrefix, typeof classPrefix !== 'undefined'),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      mergeCls = _useClassNames.merge,\n      prefix = _useClassNames.prefix; // Use `forceUpdate` to force the component to re-render after manipulating the DOM.\n\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useControlled = useControlled(expandedRowKeysProp, defaultExpandAllRows ? findRowKeys(dataProp, rowKey, isFunction(renderRowExpandedProp)) : defaultExpandedRowKeys || []),\n      expandedRowKeys = _useControlled[0],\n      setExpandedRowKeys = _useControlled[1];\n\n  var _useState = useState(function () {\n    return isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp;\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useTableRows = useTableRows({\n    data: dataProp,\n    expandedRowKeys: expandedRowKeys,\n    wordWrap: wordWrap,\n    prefix: prefix\n  }),\n      tableRowsMaxHeight = _useTableRows.tableRowsMaxHeight,\n      bindTableRowsRef = _useTableRows.bindTableRowsRef;\n\n  var headerHeight = showHeader ? headerHeightProp : 0;\n  var rtl = rtlProp || isRTL();\n\n  var getRowHeight = function getRowHeight(rowData) {\n    if (rowData === void 0) {\n      rowData = {};\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight(rowData) : rowHeight;\n  };\n\n  var translateDOMPositionXY = useRef(getTranslateDOMPositionXY({\n    forceUseTransform: true,\n    enable3DTransform: translate3d\n  })); // Check for the existence of fixed columns in all column properties.\n\n  var shouldFixedColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props;\n\n    return child === null || child === void 0 ? void 0 : (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.fixed;\n  }); // Check all column properties for the existence of rowSpan.\n\n  var shouldRowSpanColumn = Array.from(flatten(children)).some(function (child) {\n    var _child$props2;\n\n    return child === null || child === void 0 ? void 0 : (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.rowSpan;\n  });\n  var visibleRows = useRef([]);\n  var mouseAreaRef = useRef(null);\n  var tableRef = useRef(null);\n  var tableHeaderRef = useRef(null);\n  var affixHeaderWrapperRef = useRef(null);\n  var headerWrapperRef = useRef(null);\n  var tableBodyRef = useRef(null);\n  var wheelWrapperRef = useRef(null);\n  var scrollbarXRef = useRef(null);\n  var scrollbarYRef = useRef(null);\n\n  var handleTableResizeChange = function handleTableResizeChange(_prevSize, event) {\n    forceUpdate();\n    /**\n     * Reset the position of the scroll bar after the table size changes.\n     */\n\n    if (typeof shouldUpdateScroll === 'function') {\n      onScrollTo(shouldUpdateScroll(event));\n    } else if (shouldUpdateScroll) {\n      var vertical = event === 'bodyHeightChanged';\n      vertical ? onScrollTop(0) : onScrollLeft(0);\n    }\n  };\n\n  var _useTableDimension = useTableDimension({\n    data: dataProp,\n    width: widthProp,\n    rowHeight: rowHeight,\n    tableRef: tableRef,\n    headerWrapperRef: headerWrapperRef,\n    prefix: prefix,\n    affixHeader: affixHeader,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    headerHeight: headerHeight,\n    height: height,\n    minHeight: minHeight,\n    autoHeight: autoHeight,\n    fillHeight: fillHeight,\n    children: children,\n    expandedRowKeys: expandedRowKeys,\n    showHeader: showHeader,\n    onTableScroll: debounce(function (coords) {\n      return onScrollTo(coords);\n    }, 100),\n    onTableResizeChange: handleTableResizeChange\n  }),\n      contentHeight = _useTableDimension.contentHeight,\n      contentWidth = _useTableDimension.contentWidth,\n      minScrollY = _useTableDimension.minScrollY,\n      minScrollX = _useTableDimension.minScrollX,\n      scrollY = _useTableDimension.scrollY,\n      scrollX = _useTableDimension.scrollX,\n      tableWidth = _useTableDimension.tableWidth,\n      tableOffset = _useTableDimension.tableOffset,\n      headerOffset = _useTableDimension.headerOffset,\n      setScrollY = _useTableDimension.setScrollY,\n      setScrollX = _useTableDimension.setScrollX,\n      getTableHeight = _useTableDimension.getTableHeight;\n\n  useAffix({\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    affixHorizontalScrollbar: affixHorizontalScrollbar,\n    affixHeader: affixHeader,\n    tableOffset: tableOffset,\n    headerOffset: headerOffset,\n    headerHeight: headerHeight,\n    scrollbarXRef: scrollbarXRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef\n  });\n\n  var _usePosition = usePosition({\n    data: dataProp,\n    height: height,\n    tableWidth: tableWidth,\n    tableRef: tableRef,\n    prefix: prefix,\n    translateDOMPositionXY: translateDOMPositionXY,\n    wheelWrapperRef: wheelWrapperRef,\n    headerWrapperRef: headerWrapperRef,\n    affixHeaderWrapperRef: affixHeaderWrapperRef,\n    tableHeaderRef: tableHeaderRef,\n    scrollX: scrollX,\n    scrollY: scrollY,\n    contentWidth: contentWidth,\n    shouldFixedColumn: shouldFixedColumn\n  }),\n      forceUpdatePosition = _usePosition.forceUpdatePosition;\n\n  var _useScrollListener = useScrollListener({\n    rtl: rtl,\n    data: dataProp,\n    height: height,\n    virtualized: virtualized,\n    getTableHeight: getTableHeight,\n    contentHeight: contentHeight,\n    headerHeight: headerHeight,\n    autoHeight: autoHeight,\n    tableBodyRef: tableBodyRef,\n    scrollbarXRef: scrollbarXRef,\n    scrollbarYRef: scrollbarYRef,\n    disabledScroll: disabledScroll,\n    loading: loading,\n    tableRef: tableRef,\n    contentWidth: contentWidth,\n    tableWidth: tableWidth,\n    scrollY: scrollY,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    setScrollX: setScrollX,\n    setScrollY: setScrollY,\n    forceUpdatePosition: forceUpdatePosition,\n    onScroll: onScroll,\n    onTouchStart: onTouchStart,\n    onTouchMove: onTouchMove,\n    onTouchEnd: onTouchEnd\n  }),\n      isScrolling = _useScrollListener.isScrolling,\n      onScrollHorizontal = _useScrollListener.onScrollHorizontal,\n      onScrollVertical = _useScrollListener.onScrollVertical,\n      onScrollBody = _useScrollListener.onScrollBody,\n      onScrollTop = _useScrollListener.onScrollTop,\n      onScrollLeft = _useScrollListener.onScrollLeft,\n      onScrollTo = _useScrollListener.onScrollTo;\n\n  var _useCellDescriptor = useCellDescriptor({\n    children: children,\n    rtl: rtl,\n    mouseAreaRef: mouseAreaRef,\n    tableRef: tableRef,\n    minScrollX: minScrollX,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerHeight: headerHeight,\n    showHeader: showHeader,\n    sortType: sortTypeProp,\n    defaultSortType: defaultSortType,\n    sortColumn: sortColumn,\n    prefix: prefix,\n    onSortColumn: onSortColumn,\n    // Force table update after column width change, so scrollbar re-renders.\n    onHeaderCellResize: forceUpdate,\n    rowHeight: rowHeight\n  }),\n      headerCells = _useCellDescriptor.headerCells,\n      bodyCells = _useCellDescriptor.bodyCells,\n      allColumnsWidth = _useCellDescriptor.allColumnsWidth,\n      hasCustomTreeCol = _useCellDescriptor.hasCustomTreeCol;\n\n  var colCounts = useRef((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0);\n  useUpdateEffect(function () {\n    setData(isTree ? filterTreeData(dataProp, expandedRowKeys, rowKey) : dataProp);\n  }, [dataProp, expandedRowKeys, rowKey, isTree]);\n  useUpdateEffect(function () {\n    if ((headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) !== colCounts.current) {\n      onScrollLeft(0);\n      colCounts.current = (headerCells === null || headerCells === void 0 ? void 0 : headerCells.length) || 0;\n    }\n  }, [children]);\n  useImperativeHandle(ref, function () {\n    return {\n      get root() {\n        return tableRef.current;\n      },\n\n      get body() {\n        return wheelWrapperRef.current;\n      },\n\n      scrollTop: onScrollTop,\n      scrollLeft: onScrollLeft\n    };\n  });\n  var rowWidth = allColumnsWidth > tableWidth.current ? allColumnsWidth : tableWidth.current; // Whether to show vertical scroll bar\n\n  var hasVerticalScrollbar = !autoHeight && contentHeight.current > getTableHeight() - headerHeight; // Whether to show the horizontal scroll bar\n\n  var hasHorizontalScrollbar = contentWidth.current > tableWidth.current;\n  var classes = mergeCls(className, withClassPrefix({\n    bordered: bordered,\n    hover: hover && !shouldRowSpanColumn,\n    loading: loading,\n    treetable: isTree,\n    'word-wrap': wordWrap,\n    'cell-bordered': cellBordered\n  }));\n\n  var styles = _extends({\n    width: widthProp || 'auto',\n    height: getTableHeight()\n  }, style);\n\n  var renderRowExpanded = useCallback(function (rowData) {\n    var styles = {\n      height: rowExpandedHeight\n    };\n\n    if (typeof renderRowExpandedProp === 'function') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('row-expanded'),\n        style: styles\n      }, renderRowExpandedProp(rowData));\n    }\n\n    return null;\n  }, [prefix, renderRowExpandedProp, rowExpandedHeight]);\n\n  var renderRow = function renderRow(props, cells, shouldRenderExpandedRow, rowData) {\n    var depth = props.depth,\n        restRowProps = _objectWithoutPropertiesLoose(props, _excluded2);\n\n    if (typeof rowClassName === 'function') {\n      restRowProps.className = rowClassName(rowData);\n    } else {\n      restRowProps.className = rowClassName;\n    }\n\n    var rowStyles = _extends({}, props === null || props === void 0 ? void 0 : props.style);\n\n    var rowRight = 0;\n\n    if (rtl && contentWidth.current > tableWidth.current) {\n      rowRight = tableWidth.current - contentWidth.current;\n      rowStyles.right = rowRight;\n    }\n\n    var rowNode = null; // IF there are fixed columns, add a fixed group\n\n    if (shouldFixedColumn && contentWidth.current > tableWidth.current) {\n      var fixedLeftCells = [];\n      var fixedRightCells = [];\n      var scrollCells = [];\n      var fixedLeftCellGroupWidth = 0;\n      var fixedRightCellGroupWidth = 0;\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n        var _cell$props = cell.props,\n            fixed = _cell$props.fixed,\n            width = _cell$props.width;\n        var isFixedStart = fixed === 'left' || fixed === true;\n        var isFixedEnd = fixed === 'right';\n\n        if (rtl) {\n          isFixedStart = fixed === 'right';\n          isFixedEnd = fixed === 'left' || fixed === true;\n        }\n\n        if (isFixedStart) {\n          fixedLeftCells.push(cell);\n          fixedLeftCellGroupWidth += width;\n        } else if (isFixedEnd) {\n          fixedRightCells.push(cell);\n          fixedRightCellGroupWidth += width;\n        } else {\n          scrollCells.push(cell);\n        }\n      }\n\n      if (hasVerticalScrollbar && fixedRightCellGroupWidth) {\n        fixedRightCellGroupWidth += SCROLLBAR_WIDTH;\n      }\n\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, fixedLeftCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"left\",\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedLeftCellGroupWidth,\n        style: rtl ? {\n          right: tableWidth.current - fixedLeftCellGroupWidth - rowRight\n        } : undefined\n      }, mergeCells(resetLeftForCells(fixedLeftCells))) : null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(scrollCells)), fixedRightCellGroupWidth ? /*#__PURE__*/React.createElement(CellGroup, {\n        fixed: \"right\",\n        style: rtl ? {\n          right: 0 - rowRight\n        } : {\n          left: tableWidth.current - fixedRightCellGroupWidth\n        },\n        height: props.isHeaderRow ? props.headerHeight : props.height,\n        width: fixedRightCellGroupWidth\n      }, mergeCells(resetLeftForCells(fixedRightCells, hasVerticalScrollbar ? SCROLLBAR_WIDTH : 0))) : null, shouldRenderExpandedRow && renderRowExpanded(rowData));\n    } else {\n      rowNode = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CellGroup, null, mergeCells(cells)), shouldRenderExpandedRow && renderRowExpanded(rowData));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, _extends({}, restRowProps, {\n      \"data-depth\": depth,\n      style: rowStyles\n    }), renderRowProp ? renderRowProp(rowNode, rowData) : rowNode);\n  };\n\n  var renderTableHeader = function renderTableHeader(headerCells, rowWidth) {\n    var top = typeof affixHeader === 'number' ? affixHeader : 0;\n    var rowProps = {\n      'aria-rowindex': 1,\n      rowRef: tableHeaderRef,\n      width: rowWidth,\n      height: getRowHeight(),\n      headerHeight: headerHeight,\n      isHeaderRow: true,\n      top: 0\n    };\n    var fixedStyle = {\n      position: 'fixed',\n      overflow: 'hidden',\n      height: headerHeight,\n      width: tableWidth.current,\n      top: top\n    }; // Affix header\n\n    var header = /*#__PURE__*/React.createElement(\"div\", {\n      className: prefix('affix-header'),\n      style: fixedStyle,\n      ref: affixHeaderWrapperRef\n    }, renderRow(rowProps, headerCells));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (affixHeader === 0 || affixHeader) && header, /*#__PURE__*/React.createElement(\"div\", {\n      role: \"rowgroup\",\n      className: prefix('header-row-wrapper'),\n      ref: headerWrapperRef\n    }, renderRow(rowProps, headerCells)));\n  };\n\n  var shouldRenderExpandedRow = useCallback(function (rowData) {\n    if (isFunction(renderRowExpandedProp) && !isTree && rowKey && expandedRowKeys.some(function (key) {\n      return key === rowData[rowKey];\n    })) {\n      return true;\n    }\n\n    return false;\n  }, [expandedRowKeys, isTree, renderRowExpandedProp, rowKey]);\n  var bindRowClick = useCallback(function (rowData) {\n    return function (event) {\n      onRowClick === null || onRowClick === void 0 ? void 0 : onRowClick(rowData, event);\n    };\n  }, [onRowClick]);\n  var bindRowContextMenu = useCallback(function (rowData) {\n    return function (event) {\n      onRowContextMenu === null || onRowContextMenu === void 0 ? void 0 : onRowContextMenu(rowData, event);\n    };\n  }, [onRowContextMenu]);\n  var handleTreeToggle = useCallback(function (treeRowKey, _rowIndex, rowData) {\n    var open = false;\n    var nextExpandedRowKeys = [];\n\n    for (var i = 0; i < expandedRowKeys.length; i++) {\n      var key = expandedRowKeys[i];\n\n      if (key === treeRowKey) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    }\n\n    if (!open) {\n      nextExpandedRowKeys.push(treeRowKey);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n    onExpandChange === null || onExpandChange === void 0 ? void 0 : onExpandChange(!open, rowData);\n  }, [expandedRowKeys, onExpandChange, setExpandedRowKeys]);\n  /**\n   * Records the status of merged rows.\n   * { cellKey: [count,index]}\n   */\n\n  var rowSpanState = useRef({});\n\n  var renderRowData = function renderRowData(bodyCells, rowData, props, shouldRenderExpandedRow) {\n    var hasChildren = isTree && rowData.children && Array.isArray(rowData.children);\n    var nextRowKey = rowKey && typeof rowData[rowKey] !== 'undefined' ? rowData[rowKey] : props.key;\n\n    var rowProps = _extends({}, props, {\n      key: nextRowKey,\n      'aria-rowindex': props.key + 2,\n      rowRef: bindTableRowsRef(props.key, rowData),\n      onClick: bindRowClick(rowData),\n      onContextMenu: bindRowContextMenu(rowData)\n    });\n\n    var expanded = expandedRowKeys.some(function (key) {\n      return rowKey && key === rowData[rowKey];\n    });\n    var cells = [];\n\n    for (var i = 0; i < bodyCells.length; i++) {\n      var _cell$props2, _cell$props2$rowSpan, _rowSpanState$current, _cell$props3, _rowSpanState$current2;\n\n      var cell = bodyCells[i];\n      var rowSpan = (_cell$props2 = cell.props) === null || _cell$props2 === void 0 ? void 0 : (_cell$props2$rowSpan = _cell$props2.rowSpan) === null || _cell$props2$rowSpan === void 0 ? void 0 : _cell$props2$rowSpan.call(_cell$props2, rowData);\n\n      var _rowHeight = rowSpan ? rowSpan * (props.height || 46) : props.height;\n\n      var _cellKey = cell.props.dataKey || i; // Record the cell state of the merged row\n\n\n      if (((_rowSpanState$current = rowSpanState.current[_cellKey]) === null || _rowSpanState$current === void 0 ? void 0 : _rowSpanState$current[1]) > 0) {\n        rowSpanState.current[_cellKey][1] -= 1; // Restart counting when merged to the last cell.\n\n        if (rowSpanState.current[_cellKey][1] === 0) {\n          rowSpanState.current[_cellKey][0] = 0;\n        }\n      }\n\n      if (rowSpan) {\n        // The state of the initial merged cell\n        rowSpanState.current[_cellKey] = [rowSpan, rowSpan];\n        rowProps.rowSpan = rowSpan;\n        rowProps.style = {\n          overflow: 'inherit'\n        };\n      } // Cells marked as deleted when checking for merged cell.\n\n\n      var removedCell = (_cell$props3 = cell.props) !== null && _cell$props3 !== void 0 && _cell$props3.rowSpan && !rowSpan && ((_rowSpanState$current2 = rowSpanState.current[_cellKey]) === null || _rowSpanState$current2 === void 0 ? void 0 : _rowSpanState$current2[0]) !== 0 ? true : false;\n      cells.push( /*#__PURE__*/React.cloneElement(cell, {\n        hasChildren: hasChildren,\n        rowData: rowData,\n        wordWrap: wordWrap,\n        height: _rowHeight,\n        rowIndex: props.key,\n        depth: props.depth,\n        renderTreeToggle: renderTreeToggle,\n        onTreeToggle: handleTreeToggle,\n        rowKey: nextRowKey,\n        expanded: expanded,\n        rowSpan: rowSpan,\n        removed: removedCell\n      }));\n    }\n\n    return renderRow(rowProps, cells, shouldRenderExpandedRow, rowData);\n  };\n\n  var renderScrollbar = function renderScrollbar() {\n    var height = getTableHeight();\n\n    if (disabledScroll) {\n      return null;\n    }\n\n    var scrollbars = [];\n\n    if (hasHorizontalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        key: \"scrollbar\",\n        tableId: id,\n        style: {\n          width: tableWidth.current\n        },\n        length: tableWidth.current,\n        onScroll: onScrollHorizontal,\n        scrollLength: contentWidth.current,\n        ref: scrollbarXRef\n      }));\n    }\n\n    if (hasVerticalScrollbar) {\n      scrollbars.push( /*#__PURE__*/React.createElement(Scrollbar, {\n        vertical: true,\n        key: \"vertical-scrollbar\",\n        tableId: id,\n        length: height - headerHeight,\n        onScroll: onScrollVertical,\n        scrollLength: contentHeight.current,\n        ref: scrollbarYRef\n      }));\n    }\n\n    return scrollbars;\n  };\n\n  var renderTableBody = function renderTableBody(bodyCells, rowWidth) {\n    var _visibleRows$current;\n\n    var height = getTableHeight();\n    var bodyHeight = height - headerHeight;\n    var bodyStyles = {\n      top: headerHeight,\n      height: bodyHeight\n    };\n    var contentHeight = 0;\n    var topHideHeight = 0;\n    var bottomHideHeight = 0;\n    visibleRows.current = [];\n\n    if (data) {\n      var top = 0; // Row position\n\n      var minTop = Math.abs(scrollY.current);\n      var maxTop = minTop + height + rowExpandedHeight;\n      var isCustomRowHeight = typeof rowHeight === 'function';\n      var isUncertainHeight = !!renderRowExpandedProp || isCustomRowHeight || wordWrap; // If virtualized is enabled and the row height in the Table is variable,\n      // you need to loop through the data to get the height of each row.\n\n      if (isUncertainHeight && virtualized || !virtualized) {\n        // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n        if (isSupportTouchEvent()) {\n          var coveredHeight = height * 3;\n          minTop = Math.max(minTop - coveredHeight, 0);\n          maxTop = maxTop + coveredHeight;\n        }\n\n        for (var index = 0; index < data.length; index++) {\n          var _rowData = data[index];\n          var maxHeight = tableRowsMaxHeight[index];\n          var shouldRender = shouldRenderExpandedRow(_rowData);\n          var nextRowHeight = 0;\n\n          if (typeof rowHeight === 'function') {\n            nextRowHeight = rowHeight(_rowData);\n          } else {\n            nextRowHeight = maxHeight ? Math.max(maxHeight + CELL_PADDING_HEIGHT, rowHeight) : rowHeight;\n\n            if (shouldRender) {\n              nextRowHeight += rowExpandedHeight;\n            }\n          }\n\n          contentHeight += nextRowHeight;\n          var rowProps = {\n            key: index,\n            top: top,\n            width: rowWidth,\n            depth: _rowData[TREE_DEPTH],\n            height: nextRowHeight\n          };\n          top += nextRowHeight;\n\n          if (virtualized && !wordWrap) {\n            if (top + nextRowHeight < minTop) {\n              topHideHeight += nextRowHeight;\n              continue;\n            } else if (top > maxTop) {\n              bottomHideHeight += nextRowHeight;\n              continue;\n            }\n          }\n\n          visibleRows.current.push(renderRowData(bodyCells, _rowData, rowProps, shouldRender));\n        }\n      } else {\n        /** virtualized */\n        // If the row height of the Table is fixed, it is directly calculated by the row height and the number of rows,\n        // thereby reducing the performance cost of traversing all data.\n        var _nextRowHeight = getRowHeight();\n\n        var startIndex = Math.max(Math.floor(minTop / _nextRowHeight), 0);\n        var endIndex = Math.min(startIndex + Math.ceil(bodyHeight / _nextRowHeight) + 5, data.length); // Avoid white screens on the top and bottom of the table when touching and scrolling on the mobile terminal.\n        // So supplement the display data row.\n\n        if (isSupportTouchEvent()) {\n          var coveredCount = Math.floor(height / _nextRowHeight * 3);\n          startIndex = Math.max(startIndex - coveredCount, 0);\n          endIndex = Math.min(endIndex + coveredCount, data.length);\n        }\n\n        contentHeight = data.length * _nextRowHeight;\n        topHideHeight = startIndex * _nextRowHeight;\n        bottomHideHeight = (data.length - endIndex) * _nextRowHeight;\n\n        for (var _index = startIndex; _index < endIndex; _index++) {\n          var _rowData2 = data[_index];\n          var _rowProps = {\n            key: _index,\n            depth: _rowData2[TREE_DEPTH],\n            top: _index * _nextRowHeight,\n            width: rowWidth,\n            height: _nextRowHeight\n          };\n          visibleRows.current.push(renderRowData(bodyCells, _rowData2, _rowProps, false));\n        }\n      }\n    }\n\n    var wheelStyles = {\n      position: 'absolute',\n      height: contentHeight,\n      minHeight: height,\n      pointerEvents: isScrolling ? 'none' : undefined\n    };\n    var topRowStyles = {\n      height: topHideHeight\n    };\n    var bottomRowStyles = {\n      height: bottomHideHeight\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: tableBodyRef,\n      role: \"rowgroup\",\n      className: prefix('body-row-wrapper'),\n      style: bodyStyles,\n      onScroll: onScrollBody\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: wheelStyles,\n      className: prefix('body-wheel-area'),\n      ref: wheelWrapperRef\n    }, topHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: topRowStyles,\n      className: \"virtualized\"\n    }) : null, visibleRows.current, bottomHideHeight ? /*#__PURE__*/React.createElement(Row, {\n      style: bottomRowStyles,\n      className: \"virtualized\"\n    }) : null), /*#__PURE__*/React.createElement(EmptyMessage, {\n      locale: locale,\n      renderEmpty: renderEmpty,\n      addPrefix: prefix,\n      loading: !!((_visibleRows$current = visibleRows.current) !== null && _visibleRows$current !== void 0 && _visibleRows$current.length) || loading\n    }), renderScrollbar(), /*#__PURE__*/React.createElement(Loader, {\n      locale: locale,\n      loadAnimation: loadAnimation,\n      loading: loading,\n      addPrefix: prefix,\n      renderLoading: renderLoading\n    }));\n  };\n\n  var contextValue = React.useMemo(function () {\n    return {\n      classPrefix: classPrefix,\n      translateDOMPositionXY: translateDOMPositionXY.current,\n      rtl: rtl,\n      isTree: isTree,\n      hasCustomTreeCol: hasCustomTreeCol\n    };\n  }, [classPrefix, hasCustomTreeCol, isTree, rtl]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: isTree ? 'treegrid' : 'grid' // The aria-rowcount is specified on the element with the table.\n    // Its value is an integer equal to the total number of rows available, including header rows.\n    ,\n    \"aria-rowcount\": data.length + 1,\n    \"aria-colcount\": colCounts.current,\n    \"aria-busy\": loading\n  }, rest, {\n    className: classes,\n    style: styles,\n    ref: tableRef\n  }), showHeader && renderTableHeader(headerCells, rowWidth), children && renderTableBody(bodyCells, rowWidth), showHeader && /*#__PURE__*/React.createElement(MouseArea, {\n    ref: mouseAreaRef,\n    addPrefix: prefix,\n    headerHeight: headerHeight,\n    height: getTableHeight()\n  })));\n});\nTable.displayName = 'Table';\nTable.propTypes = {\n  autoHeight: PropTypes.bool,\n  fillHeight: PropTypes.bool,\n  affixHeader: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  affixHorizontalScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  bordered: PropTypes.bool,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string,\n  children: PropTypes.any,\n  cellBordered: PropTypes.bool,\n  data: PropTypes.array,\n  defaultExpandAllRows: PropTypes.bool,\n  defaultExpandedRowKeys: PropTypes.array,\n  defaultSortType: PropTypes.any,\n  disabledScroll: PropTypes.bool,\n  expandedRowKeys: PropTypes.array,\n  hover: PropTypes.bool,\n  height: PropTypes.number,\n  headerHeight: PropTypes.number,\n  locale: PropTypes.object,\n  loading: PropTypes.bool,\n  loadAnimation: PropTypes.bool,\n  minHeight: PropTypes.number,\n  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  renderTreeToggle: PropTypes.func,\n  renderRowExpanded: PropTypes.func,\n  renderRow: PropTypes.func,\n  rowExpandedHeight: PropTypes.number,\n  renderEmpty: PropTypes.func,\n  renderLoading: PropTypes.func,\n  rowClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  rtl: PropTypes.bool,\n  style: PropTypes.object,\n  sortColumn: PropTypes.string,\n  sortType: PropTypes.any,\n  showHeader: PropTypes.bool,\n  shouldUpdateScroll: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  translate3d: PropTypes.bool,\n  wordWrap: PropTypes.any,\n  width: PropTypes.number,\n  virtualized: PropTypes.bool,\n  isTree: PropTypes.bool,\n  onRowClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onScroll: PropTypes.func,\n  onSortColumn: PropTypes.func,\n  onExpandChange: PropTypes.func,\n  onTouchStart: PropTypes.func,\n  onTouchMove: PropTypes.func,\n  onTouchEnd: PropTypes.func\n};\nexport default Table;"]},"metadata":{},"sourceType":"module"}