{"ast":null,"code":"'use strict';\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\n\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};","map":{"version":3,"sources":["/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/PASTA HD SSD 2022/GitHub/testefrontamai/node_modules/axios/lib/helpers/spread.js"],"names":["module","exports","spread","callback","wrap","arr","apply"],"mappings":"AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBAA,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,QAAhB,EAA0B;AACzC,SAAO,SAASC,IAAT,CAAcC,GAAd,EAAmB;AACxB,WAAOF,QAAQ,CAACG,KAAT,CAAe,IAAf,EAAqBD,GAArB,CAAP;AACD,GAFD;AAGD,CAJD","sourcesContent":["'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n"]},"metadata":{},"sourceType":"script"}