{"ast":null,"code":"import { getParamNames } from './PatternUtils';\nfunction routeParamsChanged(route, prevState, nextState) {\n  if (!route.path) return false;\n  var paramNames = getParamNames(route.path);\n  return paramNames.some(function (paramName) {\n    return prevState.params[paramName] !== nextState.params[paramName];\n  });\n}\n\n/**\n * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by\n * the change from prevState to nextState. We leave routes if either\n * 1) they are not in the next state or 2) they are in the next state\n * but their params have changed (i.e. /users/123 => /users/456).\n *\n * leaveRoutes are ordered starting at the leaf route of the tree\n * we're leaving up to the common parent route. enterRoutes are ordered\n * from the top of the tree we're entering down to the leaf route.\n *\n * changeRoutes are any routes that didn't leave or enter during\n * the transition.\n */\nfunction computeChangedRoutes(prevState, nextState) {\n  var prevRoutes = prevState && prevState.routes;\n  var nextRoutes = nextState.routes;\n  var leaveRoutes = void 0,\n    changeRoutes = void 0,\n    enterRoutes = void 0;\n  if (prevRoutes) {\n    var parentIsLeaving = false;\n    leaveRoutes = prevRoutes.filter(function (route) {\n      if (parentIsLeaving) {\n        return true;\n      } else {\n        var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);\n        if (isLeaving) parentIsLeaving = true;\n        return isLeaving;\n      }\n    });\n\n    // onLeave hooks start at the leaf route.\n    leaveRoutes.reverse();\n    enterRoutes = [];\n    changeRoutes = [];\n    nextRoutes.forEach(function (route) {\n      var isNew = prevRoutes.indexOf(route) === -1;\n      var paramsChanged = leaveRoutes.indexOf(route) !== -1;\n      if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);\n    });\n  } else {\n    leaveRoutes = [];\n    changeRoutes = [];\n    enterRoutes = nextRoutes;\n  }\n  return {\n    leaveRoutes: leaveRoutes,\n    changeRoutes: changeRoutes,\n    enterRoutes: enterRoutes\n  };\n}\nexport default computeChangedRoutes;","map":{"version":3,"names":["getParamNames","routeParamsChanged","route","prevState","nextState","path","paramNames","some","paramName","params","computeChangedRoutes","prevRoutes","routes","nextRoutes","leaveRoutes","changeRoutes","enterRoutes","parentIsLeaving","filter","isLeaving","indexOf","reverse","forEach","isNew","paramsChanged","push"],"sources":["/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/testefrontamai/node_modules/react-router/es/computeChangedRoutes.js"],"sourcesContent":["import { getParamNames } from './PatternUtils';\n\nfunction routeParamsChanged(route, prevState, nextState) {\n  if (!route.path) return false;\n\n  var paramNames = getParamNames(route.path);\n\n  return paramNames.some(function (paramName) {\n    return prevState.params[paramName] !== nextState.params[paramName];\n  });\n}\n\n/**\n * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by\n * the change from prevState to nextState. We leave routes if either\n * 1) they are not in the next state or 2) they are in the next state\n * but their params have changed (i.e. /users/123 => /users/456).\n *\n * leaveRoutes are ordered starting at the leaf route of the tree\n * we're leaving up to the common parent route. enterRoutes are ordered\n * from the top of the tree we're entering down to the leaf route.\n *\n * changeRoutes are any routes that didn't leave or enter during\n * the transition.\n */\nfunction computeChangedRoutes(prevState, nextState) {\n  var prevRoutes = prevState && prevState.routes;\n  var nextRoutes = nextState.routes;\n\n  var leaveRoutes = void 0,\n      changeRoutes = void 0,\n      enterRoutes = void 0;\n  if (prevRoutes) {\n    var parentIsLeaving = false;\n    leaveRoutes = prevRoutes.filter(function (route) {\n      if (parentIsLeaving) {\n        return true;\n      } else {\n        var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);\n        if (isLeaving) parentIsLeaving = true;\n        return isLeaving;\n      }\n    });\n\n    // onLeave hooks start at the leaf route.\n    leaveRoutes.reverse();\n\n    enterRoutes = [];\n    changeRoutes = [];\n\n    nextRoutes.forEach(function (route) {\n      var isNew = prevRoutes.indexOf(route) === -1;\n      var paramsChanged = leaveRoutes.indexOf(route) !== -1;\n\n      if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);\n    });\n  } else {\n    leaveRoutes = [];\n    changeRoutes = [];\n    enterRoutes = nextRoutes;\n  }\n\n  return {\n    leaveRoutes: leaveRoutes,\n    changeRoutes: changeRoutes,\n    enterRoutes: enterRoutes\n  };\n}\n\nexport default computeChangedRoutes;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,gBAAgB;AAE9C,SAASC,kBAAkB,CAACC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAE;EACvD,IAAI,CAACF,KAAK,CAACG,IAAI,EAAE,OAAO,KAAK;EAE7B,IAAIC,UAAU,GAAGN,aAAa,CAACE,KAAK,CAACG,IAAI,CAAC;EAE1C,OAAOC,UAAU,CAACC,IAAI,CAAC,UAAUC,SAAS,EAAE;IAC1C,OAAOL,SAAS,CAACM,MAAM,CAACD,SAAS,CAAC,KAAKJ,SAAS,CAACK,MAAM,CAACD,SAAS,CAAC;EACpE,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,oBAAoB,CAACP,SAAS,EAAEC,SAAS,EAAE;EAClD,IAAIO,UAAU,GAAGR,SAAS,IAAIA,SAAS,CAACS,MAAM;EAC9C,IAAIC,UAAU,GAAGT,SAAS,CAACQ,MAAM;EAEjC,IAAIE,WAAW,GAAG,KAAK,CAAC;IACpBC,YAAY,GAAG,KAAK,CAAC;IACrBC,WAAW,GAAG,KAAK,CAAC;EACxB,IAAIL,UAAU,EAAE;IACd,IAAIM,eAAe,GAAG,KAAK;IAC3BH,WAAW,GAAGH,UAAU,CAACO,MAAM,CAAC,UAAUhB,KAAK,EAAE;MAC/C,IAAIe,eAAe,EAAE;QACnB,OAAO,IAAI;MACb,CAAC,MAAM;QACL,IAAIE,SAAS,GAAGN,UAAU,CAACO,OAAO,CAAClB,KAAK,CAAC,KAAK,CAAC,CAAC,IAAID,kBAAkB,CAACC,KAAK,EAAEC,SAAS,EAAEC,SAAS,CAAC;QACnG,IAAIe,SAAS,EAAEF,eAAe,GAAG,IAAI;QACrC,OAAOE,SAAS;MAClB;IACF,CAAC,CAAC;;IAEF;IACAL,WAAW,CAACO,OAAO,EAAE;IAErBL,WAAW,GAAG,EAAE;IAChBD,YAAY,GAAG,EAAE;IAEjBF,UAAU,CAACS,OAAO,CAAC,UAAUpB,KAAK,EAAE;MAClC,IAAIqB,KAAK,GAAGZ,UAAU,CAACS,OAAO,CAAClB,KAAK,CAAC,KAAK,CAAC,CAAC;MAC5C,IAAIsB,aAAa,GAAGV,WAAW,CAACM,OAAO,CAAClB,KAAK,CAAC,KAAK,CAAC,CAAC;MAErD,IAAIqB,KAAK,IAAIC,aAAa,EAAER,WAAW,CAACS,IAAI,CAACvB,KAAK,CAAC,CAAC,KAAKa,YAAY,CAACU,IAAI,CAACvB,KAAK,CAAC;IACnF,CAAC,CAAC;EACJ,CAAC,MAAM;IACLY,WAAW,GAAG,EAAE;IAChBC,YAAY,GAAG,EAAE;IACjBC,WAAW,GAAGH,UAAU;EAC1B;EAEA,OAAO;IACLC,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAC1BC,WAAW,EAAEA;EACf,CAAC;AACH;AAEA,eAAeN,oBAAoB"},"metadata":{},"sourceType":"module"}