{"ast":null,"code":"import createReactClass from 'create-react-class';\nimport { string, object } from 'prop-types';\nimport invariant from 'invariant';\nimport { createRouteFromReactElement as _createRouteFromReactElement } from './RouteUtils';\nimport { formatPattern } from './PatternUtils';\nimport { falsy } from './InternalPropTypes';\n\n/**\n * A <Redirect> is used to declare another URL path a client should\n * be sent to when they request a given URL.\n *\n * Redirects are placed alongside routes in the route configuration\n * and are traversed in the same manner.\n */\n/* eslint-disable react/require-render-return */\nvar Redirect = createReactClass({\n  displayName: 'Redirect',\n  statics: {\n    createRouteFromReactElement: function createRouteFromReactElement(element) {\n      var route = _createRouteFromReactElement(element);\n      if (route.from) route.path = route.from;\n      route.onEnter = function (nextState, replace) {\n        var location = nextState.location,\n          params = nextState.params;\n        var pathname = void 0;\n        if (route.to.charAt(0) === '/') {\n          pathname = formatPattern(route.to, params);\n        } else if (!route.to) {\n          pathname = location.pathname;\n        } else {\n          var routeIndex = nextState.routes.indexOf(route);\n          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);\n          var pattern = parentPattern.replace(/\\/*$/, '/') + route.to;\n          pathname = formatPattern(pattern, params);\n        }\n        replace({\n          pathname: pathname,\n          query: route.query || location.query,\n          state: route.state || location.state\n        });\n      };\n      return route;\n    },\n    getRoutePattern: function getRoutePattern(routes, routeIndex) {\n      var parentPattern = '';\n      for (var i = routeIndex; i >= 0; i--) {\n        var route = routes[i];\n        var pattern = route.path || '';\n        parentPattern = pattern.replace(/\\/*$/, '/') + parentPattern;\n        if (pattern.indexOf('/') === 0) break;\n      }\n      return '/' + parentPattern;\n    }\n  },\n  propTypes: {\n    path: string,\n    from: string,\n    // Alias for path\n    to: string.isRequired,\n    query: object,\n    state: object,\n    onEnter: falsy,\n    children: falsy\n  },\n  /* istanbul ignore next: sanity check */\n  render: function render() {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<Redirect> elements are for router configuration only and should not be rendered') : invariant(false) : void 0;\n  }\n});\nexport default Redirect;","map":{"version":3,"names":["createReactClass","string","object","invariant","createRouteFromReactElement","_createRouteFromReactElement","formatPattern","falsy","Redirect","displayName","statics","element","route","from","path","onEnter","nextState","replace","location","params","pathname","to","charAt","routeIndex","routes","indexOf","parentPattern","getRoutePattern","pattern","query","state","i","propTypes","isRequired","children","render","process","env","NODE_ENV"],"sources":["/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/testefrontamai/node_modules/react-router/es/Redirect.js"],"sourcesContent":["import createReactClass from 'create-react-class';\nimport { string, object } from 'prop-types';\nimport invariant from 'invariant';\nimport { createRouteFromReactElement as _createRouteFromReactElement } from './RouteUtils';\nimport { formatPattern } from './PatternUtils';\nimport { falsy } from './InternalPropTypes';\n\n/**\n * A <Redirect> is used to declare another URL path a client should\n * be sent to when they request a given URL.\n *\n * Redirects are placed alongside routes in the route configuration\n * and are traversed in the same manner.\n */\n/* eslint-disable react/require-render-return */\nvar Redirect = createReactClass({\n  displayName: 'Redirect',\n\n  statics: {\n    createRouteFromReactElement: function createRouteFromReactElement(element) {\n      var route = _createRouteFromReactElement(element);\n\n      if (route.from) route.path = route.from;\n\n      route.onEnter = function (nextState, replace) {\n        var location = nextState.location,\n            params = nextState.params;\n\n\n        var pathname = void 0;\n        if (route.to.charAt(0) === '/') {\n          pathname = formatPattern(route.to, params);\n        } else if (!route.to) {\n          pathname = location.pathname;\n        } else {\n          var routeIndex = nextState.routes.indexOf(route);\n          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);\n          var pattern = parentPattern.replace(/\\/*$/, '/') + route.to;\n          pathname = formatPattern(pattern, params);\n        }\n\n        replace({\n          pathname: pathname,\n          query: route.query || location.query,\n          state: route.state || location.state\n        });\n      };\n\n      return route;\n    },\n    getRoutePattern: function getRoutePattern(routes, routeIndex) {\n      var parentPattern = '';\n\n      for (var i = routeIndex; i >= 0; i--) {\n        var route = routes[i];\n        var pattern = route.path || '';\n\n        parentPattern = pattern.replace(/\\/*$/, '/') + parentPattern;\n\n        if (pattern.indexOf('/') === 0) break;\n      }\n\n      return '/' + parentPattern;\n    }\n  },\n\n  propTypes: {\n    path: string,\n    from: string, // Alias for path\n    to: string.isRequired,\n    query: object,\n    state: object,\n    onEnter: falsy,\n    children: falsy\n  },\n\n  /* istanbul ignore next: sanity check */\n  render: function render() {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<Redirect> elements are for router configuration only and should not be rendered') : invariant(false) : void 0;\n  }\n});\n\nexport default Redirect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}