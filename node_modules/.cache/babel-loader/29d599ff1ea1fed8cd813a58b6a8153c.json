{"ast":null,"code":"export function loopAsync(turns, work, callback) {\n  var currentTurn = 0,\n    isDone = false;\n  var sync = false,\n    hasNext = false,\n    doneArgs = void 0;\n  function done() {\n    isDone = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = [].concat(Array.prototype.slice.call(arguments));\n      return;\n    }\n    callback.apply(this, arguments);\n  }\n  function next() {\n    if (isDone) {\n      return;\n    }\n    hasNext = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      return;\n    }\n    sync = true;\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false;\n      work.call(this, currentTurn++, next, done);\n    }\n    sync = false;\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback.apply(this, doneArgs);\n      return;\n    }\n    if (currentTurn >= turns && hasNext) {\n      isDone = true;\n      callback();\n    }\n  }\n  next();\n}\nexport function mapAsync(array, work, callback) {\n  var length = array.length;\n  var values = [];\n  if (length === 0) return callback(null, values);\n  var isDone = false,\n    doneCount = 0;\n  function done(index, error, value) {\n    if (isDone) return;\n    if (error) {\n      isDone = true;\n      callback(error);\n    } else {\n      values[index] = value;\n      isDone = ++doneCount === length;\n      if (isDone) callback(null, values);\n    }\n  }\n  array.forEach(function (item, index) {\n    work(item, index, function (error, value) {\n      done(index, error, value);\n    });\n  });\n}","map":{"version":3,"names":["loopAsync","turns","work","callback","currentTurn","isDone","sync","hasNext","doneArgs","done","concat","Array","prototype","slice","call","arguments","apply","next","mapAsync","array","length","values","doneCount","index","error","value","forEach","item"],"sources":["/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/testefrontamai/node_modules/react-router/es/AsyncUtils.js"],"sourcesContent":["export function loopAsync(turns, work, callback) {\n  var currentTurn = 0,\n      isDone = false;\n  var sync = false,\n      hasNext = false,\n      doneArgs = void 0;\n\n  function done() {\n    isDone = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = [].concat(Array.prototype.slice.call(arguments));\n      return;\n    }\n\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) {\n      return;\n    }\n\n    hasNext = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      return;\n    }\n\n    sync = true;\n\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false;\n      work.call(this, currentTurn++, next, done);\n    }\n\n    sync = false;\n\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback.apply(this, doneArgs);\n      return;\n    }\n\n    if (currentTurn >= turns && hasNext) {\n      isDone = true;\n      callback();\n    }\n  }\n\n  next();\n}\n\nexport function mapAsync(array, work, callback) {\n  var length = array.length;\n  var values = [];\n\n  if (length === 0) return callback(null, values);\n\n  var isDone = false,\n      doneCount = 0;\n\n  function done(index, error, value) {\n    if (isDone) return;\n\n    if (error) {\n      isDone = true;\n      callback(error);\n    } else {\n      values[index] = value;\n\n      isDone = ++doneCount === length;\n\n      if (isDone) callback(null, values);\n    }\n  }\n\n  array.forEach(function (item, index) {\n    work(item, index, function (error, value) {\n      done(index, error, value);\n    });\n  });\n}"],"mappings":"AAAA,OAAO,SAASA,SAAS,CAACC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EAC/C,IAAIC,WAAW,GAAG,CAAC;IACfC,MAAM,GAAG,KAAK;EAClB,IAAIC,IAAI,GAAG,KAAK;IACZC,OAAO,GAAG,KAAK;IACfC,QAAQ,GAAG,KAAK,CAAC;EAErB,SAASC,IAAI,GAAG;IACdJ,MAAM,GAAG,IAAI;IACb,IAAIC,IAAI,EAAE;MACR;MACAE,QAAQ,GAAG,EAAE,CAACE,MAAM,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC,CAAC;MAC3D;IACF;IAEAZ,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;EACjC;EAEA,SAASE,IAAI,GAAG;IACd,IAAIZ,MAAM,EAAE;MACV;IACF;IAEAE,OAAO,GAAG,IAAI;IACd,IAAID,IAAI,EAAE;MACR;MACA;IACF;IAEAA,IAAI,GAAG,IAAI;IAEX,OAAO,CAACD,MAAM,IAAID,WAAW,GAAGH,KAAK,IAAIM,OAAO,EAAE;MAChDA,OAAO,GAAG,KAAK;MACfL,IAAI,CAACY,IAAI,CAAC,IAAI,EAAEV,WAAW,EAAE,EAAEa,IAAI,EAAER,IAAI,CAAC;IAC5C;IAEAH,IAAI,GAAG,KAAK;IAEZ,IAAID,MAAM,EAAE;MACV;MACAF,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAER,QAAQ,CAAC;MAC9B;IACF;IAEA,IAAIJ,WAAW,IAAIH,KAAK,IAAIM,OAAO,EAAE;MACnCF,MAAM,GAAG,IAAI;MACbF,QAAQ,EAAE;IACZ;EACF;EAEAc,IAAI,EAAE;AACR;AAEA,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAEjB,IAAI,EAAEC,QAAQ,EAAE;EAC9C,IAAIiB,MAAM,GAAGD,KAAK,CAACC,MAAM;EACzB,IAAIC,MAAM,GAAG,EAAE;EAEf,IAAID,MAAM,KAAK,CAAC,EAAE,OAAOjB,QAAQ,CAAC,IAAI,EAAEkB,MAAM,CAAC;EAE/C,IAAIhB,MAAM,GAAG,KAAK;IACdiB,SAAS,GAAG,CAAC;EAEjB,SAASb,IAAI,CAACc,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAE;IACjC,IAAIpB,MAAM,EAAE;IAEZ,IAAImB,KAAK,EAAE;MACTnB,MAAM,GAAG,IAAI;MACbF,QAAQ,CAACqB,KAAK,CAAC;IACjB,CAAC,MAAM;MACLH,MAAM,CAACE,KAAK,CAAC,GAAGE,KAAK;MAErBpB,MAAM,GAAG,EAAEiB,SAAS,KAAKF,MAAM;MAE/B,IAAIf,MAAM,EAAEF,QAAQ,CAAC,IAAI,EAAEkB,MAAM,CAAC;IACpC;EACF;EAEAF,KAAK,CAACO,OAAO,CAAC,UAAUC,IAAI,EAAEJ,KAAK,EAAE;IACnCrB,IAAI,CAACyB,IAAI,EAAEJ,KAAK,EAAE,UAAUC,KAAK,EAAEC,KAAK,EAAE;MACxChB,IAAI,CAACc,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}