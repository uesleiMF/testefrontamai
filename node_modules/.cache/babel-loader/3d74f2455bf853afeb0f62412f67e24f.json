{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.readState = exports.saveState = undefined;\nvar _warning = require('warning');\nvar _warning2 = _interopRequireDefault(_warning);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar QuotaExceededErrors = {\n  QuotaExceededError: true,\n  QUOTA_EXCEEDED_ERR: true\n};\nvar SecurityErrors = {\n  SecurityError: true\n};\nvar KeyPrefix = '@@History/';\nvar createKey = function createKey(key) {\n  return KeyPrefix + key;\n};\nvar saveState = exports.saveState = function saveState(key, state) {\n  if (!window.sessionStorage) {\n    // Session storage is not available or hidden.\n    // sessionStorage is undefined in Internet Explorer when served via file protocol.\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available') : void 0;\n    return;\n  }\n  try {\n    if (state == null) {\n      window.sessionStorage.removeItem(createKey(key));\n    } else {\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n    }\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available due to security settings') : void 0;\n      return;\n    }\n    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : void 0;\n      return;\n    }\n    throw error;\n  }\n};\nvar readState = exports.readState = function readState(key) {\n  var json = void 0;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to read state; sessionStorage is not available due to security settings') : void 0;\n      return undefined;\n    }\n  }\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n  return undefined;\n};","map":{"version":3,"names":["exports","__esModule","readState","saveState","undefined","_warning","require","_warning2","_interopRequireDefault","obj","default","QuotaExceededErrors","QuotaExceededError","QUOTA_EXCEEDED_ERR","SecurityErrors","SecurityError","KeyPrefix","createKey","key","state","window","sessionStorage","process","env","NODE_ENV","removeItem","setItem","JSON","stringify","error","name","length","json","getItem","parse"],"sources":["/media/ueslei/8c30fe4f-7d20-4ae9-ab32-8dd7ef60dcdf/home/jumf/testefrontamai/node_modules/history/lib/DOMStateStorage.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.readState = exports.saveState = undefined;\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar QuotaExceededErrors = {\n  QuotaExceededError: true,\n  QUOTA_EXCEEDED_ERR: true\n};\n\nvar SecurityErrors = {\n  SecurityError: true\n};\n\nvar KeyPrefix = '@@History/';\n\nvar createKey = function createKey(key) {\n  return KeyPrefix + key;\n};\n\nvar saveState = exports.saveState = function saveState(key, state) {\n  if (!window.sessionStorage) {\n    // Session storage is not available or hidden.\n    // sessionStorage is undefined in Internet Explorer when served via file protocol.\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available') : void 0;\n\n    return;\n  }\n\n  try {\n    if (state == null) {\n      window.sessionStorage.removeItem(createKey(key));\n    } else {\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n    }\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available due to security settings') : void 0;\n\n      return;\n    }\n\n    if (QuotaExceededErrors[error.name] && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : void 0;\n\n      return;\n    }\n\n    throw error;\n  }\n};\n\nvar readState = exports.readState = function readState(key) {\n  var json = void 0;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (SecurityErrors[error.name]) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '[history] Unable to read state; sessionStorage is not available due to security settings') : void 0;\n\n      return undefined;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return undefined;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}