{"ast":null,"code":"var _jsxFileName = \"/home/ueslei/Documentos/GitHub/testefrontamai/src/pages/Radio/Radio.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styles from \"../AudioPlayer.module.css\";\nimport { BsArrowLeftShort } from \"react-icons/bs\";\nimport { BsArrowRightShort } from \"react-icons/bs\";\nimport { FaPlay } from \"react-icons/fa\";\nimport { FaPause } from \"react-icons/fa\";\n\nconst Radio = () => {\n  var _audioPlayer$current, _audioPlayer$current2;\n\n  // state\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0); // references\n\n  const audioPlayer = useRef(); // reference our audio component\n\n  const progressBar = useRef(); // reference our progress bar\n\n  const animationRef = useRef(); // reference the animation\n\n  useEffect(() => {\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n    progressBar.current.max = seconds;\n  }, [audioPlayer === null || audioPlayer === void 0 ? void 0 : (_audioPlayer$current = audioPlayer.current) === null || _audioPlayer$current === void 0 ? void 0 : _audioPlayer$current.loadedmetadata, audioPlayer === null || audioPlayer === void 0 ? void 0 : (_audioPlayer$current2 = audioPlayer.current) === null || _audioPlayer$current2 === void 0 ? void 0 : _audioPlayer$current2.readyState]);\n\n  const calculateTime = secs => {\n    const minutes = Math.floor(secs / 60);\n    const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const seconds = Math.floor(secs % 60);\n    const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${returnedMinutes}:${returnedSeconds}`;\n  };\n\n  const togglePlayPause = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n\n    if (!prevValue) {\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying);\n    } else {\n      audioPlayer.current.pause();\n      cancelAnimationFrame(animationRef.current);\n    }\n  };\n\n  const whilePlaying = () => {\n    progressBar.current.value = audioPlayer.current.currentTime;\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  };\n\n  const changeRange = () => {\n    audioPlayer.current.currentTime = progressBar.current.value;\n    changePlayerCurrentTime();\n  };\n\n  const changePlayerCurrentTime = () => {\n    progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`);\n    setCurrentTime(progressBar.current.value);\n  };\n\n  const backThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value - 30);\n    changeRange();\n  };\n\n  const forwardThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value + 30);\n    changeRange();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.audioPlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioPlayer,\n    src: \"https://cdn.simplecast.com/audio/cae8b0eb-d9a9-480d-a652-0defcbe047f4/episodes/af52a99b-88c0-4638-b120-d46e142d06d3/audio/500344fb-2e2b-48af-be86-af6ac341a6da/default_tc.mp3\",\n    preload: \"metadata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.forwardBackward,\n    onClick: backThirty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BsArrowLeftShort, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 71\n    }\n  }), \" 30\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: togglePlayPause,\n    className: styles.playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, isPlaying ? /*#__PURE__*/React.createElement(FaPause, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(FaPlay, {\n    className: styles.play,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 36\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.forwardBackward,\n    onClick: forwardThirty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"30 \", /*#__PURE__*/React.createElement(BsArrowRightShort, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 77\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.currentTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, calculateTime(currentTime)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: styles.progressBar,\n    defaultValue: \"0\",\n    ref: progressBar,\n    onChange: changeRange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.duration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, duration && !isNaN(duration) && calculateTime(duration)));\n};\n\nexport default Radio;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/testefrontamai/src/pages/Radio/Radio.js"],"names":["React","useState","useRef","useEffect","styles","BsArrowLeftShort","BsArrowRightShort","FaPlay","FaPause","Radio","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioPlayer","progressBar","animationRef","seconds","Math","floor","current","max","loadedmetadata","readyState","calculateTime","secs","minutes","returnedMinutes","returnedSeconds","togglePlayPause","prevValue","play","requestAnimationFrame","whilePlaying","pause","cancelAnimationFrame","value","changePlayerCurrentTime","changeRange","style","setProperty","backThirty","Number","forwardThirty","forwardBackward","playPause","isNaN"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport styles from \"../AudioPlayer.module.css\";\nimport { BsArrowLeftShort } from \"react-icons/bs\"\nimport { BsArrowRightShort } from \"react-icons/bs\"\nimport { FaPlay } from \"react-icons/fa\"\nimport { FaPause } from \"react-icons/fa\"\n\nconst Radio = () => {\n  // state\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  // references\n  const audioPlayer = useRef();   // reference our audio component\n  const progressBar = useRef();   // reference our progress bar\n  const animationRef = useRef();  // reference the animation\n\n  useEffect(() => {\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n    progressBar.current.max = seconds;\n  }, [audioPlayer?.current?.loadedmetadata, audioPlayer?.current?.readyState]);\n\n  const calculateTime = (secs) => {\n    const minutes = Math.floor(secs / 60);\n    const returnedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const seconds = Math.floor(secs % 60);\n    const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${returnedMinutes}:${returnedSeconds}`;\n  }\n\n  const togglePlayPause = () => {\n    const prevValue = isPlaying;\n    setIsPlaying(!prevValue);\n    if (!prevValue) {\n      audioPlayer.current.play();\n      animationRef.current = requestAnimationFrame(whilePlaying)\n    } else {\n      audioPlayer.current.pause();\n      cancelAnimationFrame(animationRef.current);\n    }\n  }\n\n  const whilePlaying = () => {\n    progressBar.current.value = audioPlayer.current.currentTime;\n    changePlayerCurrentTime();\n    animationRef.current = requestAnimationFrame(whilePlaying);\n  }\n\n  const changeRange = () => {\n    audioPlayer.current.currentTime = progressBar.current.value;\n    changePlayerCurrentTime();\n  }\n\n  const changePlayerCurrentTime = () => {\n    progressBar.current.style.setProperty('--seek-before-width', `${progressBar.current.value / duration * 100}%`)\n    setCurrentTime(progressBar.current.value);\n  }\n\n  const backThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value - 30);\n    changeRange();\n  }\n\n  const forwardThirty = () => {\n    progressBar.current.value = Number(progressBar.current.value + 30);\n    changeRange();\n  }\n\n  return (\n    <div className={styles.audioPlayer}>\n      <audio ref={audioPlayer} src=\"https://cdn.simplecast.com/audio/cae8b0eb-d9a9-480d-a652-0defcbe047f4/episodes/af52a99b-88c0-4638-b120-d46e142d06d3/audio/500344fb-2e2b-48af-be86-af6ac341a6da/default_tc.mp3\" preload=\"metadata\"></audio>\n      <button className={styles.forwardBackward} onClick={backThirty}><BsArrowLeftShort /> 30</button>\n      <button onClick={togglePlayPause} className={styles.playPause}>\n        {isPlaying ? <FaPause /> : <FaPlay className={styles.play} />}\n      </button>\n      <button className={styles.forwardBackward} onClick={forwardThirty}>30 <BsArrowRightShort /></button>\n\n      {/* current time */}\n      <div className={styles.currentTime}>{calculateTime(currentTime)}</div>\n\n      {/* progress bar */}\n      <div>\n        <input type=\"range\" className={styles.progressBar} defaultValue=\"0\" ref={progressBar} onChange={changeRange} />\n      </div>\n\n      {/* duration */}\n      <div className={styles.duration}>{(duration && !isNaN(duration)) && calculateTime(duration)}</div>\n    </div>\n  )\n}\n\nexport default Radio"]},"metadata":{},"sourceType":"module"}