var Firebase = require('client-firebase');

var MultiplayerMixin = {
  getInstanceID: function() {
    var sessionKey = this.getSessionKey ? this.getSessionKey() : '';
    return window.btoa(this._rootNodeID + ',' + this._mountDepth + ',' + sessionKey);
  },
  componentWillMount: function() {
    this.updatingFromFirebase = false;
    this.firebase = new Firebase(FIREBASE_ROOT + this.getInstanceID());
  },
  componentDidMount: function() {
    this.firebase.on('value', this.handleFirebaseValue);
  },
  componentWillUnmount: function() {
    this.firebase.off('value', this.handleFirebaseValue);
  },
  componentDidUpdate: function(prevProps, prevState) {
    if (this.updatingFromFirebase) {
      return;
    }
    var update = {};
    for (var k in this.state) {
      if (prevState[k] !== this.state[k]) {
        update[k] = this.state[k];
      }
    }
    this.firebase.update(update);
  },
  handleFirebaseDone: function() {
    this.updatingFromFirebase = false;
  },
  handleFirebaseValue: function(snapshot) {
    this.updatingFromFirebase = true;
    // TODO: can we remove this double reconcile?
    this.replaceState(snapshot.val(), this.handleFirebaseDone);
  }
};